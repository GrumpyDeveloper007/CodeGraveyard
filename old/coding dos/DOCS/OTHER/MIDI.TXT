
                           Standard MIDI File Format
                                Dustin Caldwell

      The standard MIDI file format is a very strange beast. When viewed as a
whole, it can be quite overwhelming. Of course, no matter how you look at it,
describing a piece of music in enough detail to be able to reproduce it
accurately is no small task. So, while complicated, the structure of the midi
file format is fairly intuitive when understood. 
      I must insert a disclaimer here that I am by no means an expert with
midi nor midi files. I recently obtained a Gravis UltraSound board for my PC,
and upon hearing a few midi files (.MID) thought, "Gee, I'd like to be able to
make my own .MID files." Well, many aggravating hours later, I discovered that
this was no trivial task. But, I couldn't let a stupid file format stop me.
(besides, I once told my wife that computers aren't really that hard to use,
and I'd hate to be a hypocrite) So if any errors are found in this
information, please let me know and I will fix it. Also, this document's scope
does not extend to EVERY type of midi command and EVERY possible file
configuration. It is a basic guide that should enable the reader (with a
moderate investment in time) to generate a quality midi file.

1. Overview

      A midi (.MID) file contains basically 2 things, Header chunks and Track
chunks. Section 2 explains the header chunks, and Section 3 explains the track
chunks. A midi file contains ONE header chunk describing the file format,
etc., and any number of track chunks. A track may be thought of in the same
way as a track on a multi-track tape deck. You may assign one track to each
voice, each staff, each instrument or whatever you want. 

2. Header Chunk

      The header chunk appears at the beginning of the file, and describes the
file in three ways. The header chunk always looks like:

4D 54 68 64 00 00 00 06 ff ff nn nn dd dd

The ascii equivalent of the first 4 bytes is MThd. After MThd comes the 4-byte
size of the header. This will always be 00 00 00 06, because the actual header
information will always be 6 bytes. 

ff ff is the file format. There are 3 formats:

0 - single-track 
1 - multiple tracks, synchronous
2 - multiple tracks, asynchronous

Single track is fairly self-explanatory - one track only. Synchronous multiple
tracks means that the tracks will all be vertically synchronous, or in other
words, they all start at the same time, and so can represent different parts
in one song. Asynchronous multiple tracks do not necessarily start at the same
time, and can be completely asynchronous. 

nn nn is the number of tracks in the midi file.

dd dd is the number of delta-time ticks per quarter note. (More about this
later)


3. Track Chunks

The remainder of the file after the header chunk consists of track chunks.
Each track has one header and may contain as many midi commands as you like.
The header for a track is very similar to the one for the file:

4D 54 72 6B xx xx xx xx

As with the header, the first 4 bytes has an ascii equivalent. This one is
MTrk. The 4 bytes after MTrk give the length of the track (not including the
track header) in bytes. 
      Following the header are midi events. These events are identical to the
actual data sent and received by MIDI ports on a synth with one addition. A
midi event is preceded by a delta-time. A delta time is the number of ticks
after which the midi event is to be executed. The number of ticks per quarter
note was defined previously in the file header chunk. This delta-time is a
variable-length encoded value. This format, while confusing, allows large
numbers to use as many bytes as they need, without requiring small numbers to
waste bytes by filling with zeros. The number is converted into 7-bit bytes,
and the most-significant bit of each byte is 1 except for the last byte of the
number, which has a msb of 0. This allows the number to be read one byte at a
time, and when you see a msb of 0, you know that it was the last (least
significant) byte of the number. According to the MIDI spec, the entire delta-
time should be at most 4 bytes long. 
      Following the delta-time is a midi event. Each midi event (except a
running midi event) has a command byte which will always have a msb of 1 (the
value will be >= 128). A list of most of these commands is in appendix A. Each
command has different parameters and lengths, but the data that follows the
command will have a msb of 0 (less than 128). The exception to this is a meta-
event, which may contain data with a msb of 1. However, meta-events require a
length parameter which alleviates confusion. 
      One subtlety which can cause confusion is running mode. This is where
the actual midi command is omitted, and the last midi command issued is
assumed. This means that the midi event will consist of a delta-time and the
parameters that would go to the command if it were included. 

4. Conclusion

      If this explanation has only served to confuse the issue more, the
appendices contain examples which may help clarify the issue. Also, 2
utilities and a graphic file should have been included with this document: 

DEC.EXE - This utility converts a binary file (like .MID) to a tab-delimited
text file containing the decimal equivalents of each byte.

REC.EXE - This utility converts a tab-delimited text file of decimal values
into a binary file in which each byte corresponds to one of the decimal
values.

MIDINOTE.PS - This is the postscript form of a page showing note numbers with
a keyboard and with the standard grand staff.
                                                                         Appendix A

1. MIDI Event Commands

Each command byte has 2 parts. The left nybble (4 bits) contains the actual
command, and the right nybble contains the midi channel number on which the
command will be executed. There are 16 midi channels, and 8 midi commands (the
command nybble must have a msb of 1).
In the following table, x indicates the midi channel number. Note that all
data bytes will be <128 (msb set to 0).

Hex      Binary       Data          Description
8x       1000xxxx     nn vv         Note off (key is released)
                                    nn=note number
                                    vv=velocity

9x       1001xxxx     nn vv         Note on (key is pressed)
                                    nn=note number
                                    vv=velocity

Ax       1010xxxx     nn vv         Key after-touch
                                    nn=note number
                                    vv=velocity

Bx       1011xxxx     cc vv         Control Change
                                    cc=controller number
                                    vv=new value

Cx       1100xxxx     pp            Program (patch) change
                                    pp=new program number

Dx       1101xxxx     cc            Channel after-touch
                                    cc=channel number

Ex       1110xxxx     bb tt         Pitch wheel change (2000H is normal or no
                                    change)
                                    bb=bottom (least sig) 7 bits of value
                                    tt=top (most sig) 7 bits of value
The following table lists meta-events which have no midi channel number. They
are of the format:

FF xx nn dd

All meta-events start with FF followed by the command (xx), the length, or
number of bytes that will contain data (nn), and the actual data (dd).

Hex      Binary       Data          Description
00       00000000     nn ssss       Sets the track's sequence number.
                                    nn=02 (length of 2-byte sequence number)
                                    ssss=sequence number

01       00000001     nn tt ..      Text event- any text you want.
                                    nn=length in bytes of text
                                    tt=text characters

02       00000010     nn tt ..      Same as text event, but used for
                                    copyright info.
                                    nn tt=same as text event

03       00000011     nn tt ..      Sequence or Track name
                                    nn tt=same as text event

04       00000100     nn tt ..      Track instrument name
                                    nn tt=same as text event

05       00000101     nn tt ..      Lyric
                                    nn tt=same as text event

06       00000110     nn tt ..      Marker
                                    nn tt=same as text event

07       00000111     nn tt ..      Cue point
                                    nn tt=same as text event

2F       00101111     00            This event must come at the end of each
                                    track

51       01010001     03 tttttt     Set tempo
                                    tttttt=microseconds/quarter note

58       01011000     04 nn dd ccbb Time Signature
                                    nn=numerator of time sig.
                                    dd=denominator of time sig. 2=quarter
                                    3=eighth, etc.
                                    cc=number of ticks in metronome click
                                    bb=number of 32nd notes to the quarter
                                    note

59       01011001     02 sf mi      Key signature
                                    sf=sharps/flats (-7=7 flats, 0=key of C,
                                    7=7 sharps)
                                    mi=major/minor (0=major, 1=minor)

7F       01111111     xx dd ..      Sequencer specific information
                                    xx=number of bytes to be sent
                                    dd=data
The following table lists system messages which control the entire system.
These have no midi channel number. (these will generally only apply to
controlling a midi keyboard, etc.)

Hex      Binary       Data          Description
F8       11111000                   Timing clock used when synchronization is
                                    required.

FA       11111010                   Start current sequence

FB       11111011                   Continue a stopped sequence where left
                                    off

FC       11111100                   Stop a sequence


The following table lists the numbers corresponding to notes for use in note 
on and note off commands.


Octave||                     Note Numbers
   #  ||
      || C   | C#  | D   | D#  | E   | F   | F#  | G   | G#  | A   | A#  | B
-----------------------------------------------------------------------------
   0  ||   0 |   1 |   2 |   3 |   4 |   5 |   6 |   7 |   8 |   9 |  10 | 11
   1  ||  12 |  13 |  14 |  15 |  16 |  17 |  18 |  19 |  20 |  21 |  22 | 23
   2  ||  24 |  25 |  26 |  27 |  28 |  29 |  30 |  31 |  32 |  33 |  34 | 35
   3  ||  36 |  37 |  38 |  39 |  40 |  41 |  42 |  43 |  44 |  45 |  46 | 47
   4  ||  48 |  49 |  50 |  51 |  52 |  53 |  54 |  55 |  56 |  57 |  58 | 59
   5  ||  60 |  61 |  62 |  63 |  64 |  65 |  66 |  67 |  68 |  69 |  70 | 71
   6  ||  72 |  73 |  74 |  75 |  76 |  77 |  78 |  79 |  80 |  81 |  82 | 83
   7  ||  84 |  85 |  86 |  87 |  88 |  89 |  90 |  91 |  92 |  93 |  94 | 95
   8  ||  96 |  97 |  98 |  99 | 100 | 101 | 102 | 103 | 104 | 105 | 106 | 107
   9  || 108 | 109 | 110 | 111 | 112 | 113 | 114 | 115 | 116 | 117 | 118 | 119
  10  || 120 | 121 | 122 | 123 | 124 | 125 | 126 | 127 |


                                BIBLIOGRAPHY

  "MIDI Systems and Control" Francis Rumsey  1990 Focal Press

  "MIDI and Sound Book for the Atari ST" Bernd Enders and Wolfgang Klemme
          1989 M&T Publishing, Inc.

  MIDI file specs and general MIDI specs were also obtained by sending e-mail
         to LISTSERV@AUVM.AMERICAN.EDU with the phrase GET MIDISPEC PACKAGE
         in the message.


------------------------------- DEC.CPP ------------------------------------

/*  file  dec.cpp

by  Dustin Caldwell    (dustin@gse.utah.edu)

*/


#include <dos.h>
#include <stdio.h>
#include <stdlib.h>

void helpdoc();

main()
{
        FILE *fp;

        unsigned char ch, c;

        if((fp=fopen(_argv[1], "rb"))==NULL)            /* open file to read */
        {
                printf("cannot open file %s\n",_argv[1]);
                helpdoc();
                exit(-1);
        }

        c=0;
        ch=fgetc(fp);

        while(!feof(fp))                        /* loop for whole file */
        {
                printf("%u\t", ch);             /* print every byte's decimal equiv. */
                c++;
                if(c>8)                                 /* print 8 numbers to a line */
                {
                        c=0;
                        printf("\n");
                }

                ch=fgetc(fp);
        }

        fclose(fp);                     /* close up */
}

void helpdoc()                  /* print help message */
{
        printf("\n   Binary File Decoder\n\n");

        printf("\n Syntax:  dec binary_file_name\n\n");

        printf("by Dustin Caldwell  (dustin@gse.utah.edu)\n\n");
        printf("This is a filter program that reads a binary file\n");
        printf("and prints the decimal equivalent of each byte\n");
        printf("tab-separated. This is mostly useful when piped \n");
        printf("into another file to be edited manually.  eg:\n\n");
        printf("c:\>dec sonata3.mid > son3.txt\n\n");
        printf("This will create a file called son3.txt which can\n");
        printf("be edited with any ascii editor. \n\n");
        printf("(rec.exe may also be useful, as it reencodes the \n");
        printf("ascii text file).\n\n");
        printf("Have Fun!!\n");
}

---------------------------- REC.CPP ----------------------------------

/*  File  rec.cpp
        by Dustin Caldwell   (dustin@gse.utah.edu)
*/

#include <dos.h>
#include <stdio.h>
#include <ctype.h>
#include <stdlib.h>

void helpdoc();

main()
{
        FILE *rfp, *wfp;

        unsigned char ch, c;
        char s[20];

        if((rfp=fopen(_argv[1], "r"))==NULL)                    /* open the read file */
        {
                printf("cannot open file %s \n",_argv[1]);
                helpdoc();
                exit(-1);
        }

        if((wfp=fopen(_argv[2], "wb"))==NULL)                   /* open the write file */
        {
                printf("cannot open file %s \n",_argv[1]);
                helpdoc();
                exit(-1);
        }

        c=0;

        ch=fgetc(rfp);

        while(!feof(rfp))                       /* loop for whole file */
        {

                if(isalnum(ch))                 /* only 'see' valid ascii chars */
                {
                        c=0;
                        while(isdigit(ch))      /* only use decimal digits (0-9) */
                        {
                                s[c]=ch;        /* build a string containing the number */
                                c++;
                                ch=fgetc(rfp);
                        }
                        s[c]=NULL;                      /* must have NULL terminator */

                        fputc(atoi(s), wfp);/* write the binary equivalent to file */

                }

                ch=fgetc(rfp);                  /* loop until next number starts */


        }

        fclose(rfp);                    /* close up */
        fclose(wfp);
}


void helpdoc()          /* print help message */
{
        printf("\n   Text File Encoder\n\n");

        printf("\n Syntax:  rec text_file_name binary_file_name\n\n");

        printf("by Dustin Caldwell  (dustin@gse.utah.edu)\n\n");
        printf("This is a program that reads an ascii tab-\n");
        printf("delimited file and builds a binary file where\n");
        printf("each byte of the binary file is one of the decimal\n");
        printf("digits in the text file.\n");
        printf(" eg:\n\n");
        printf("c:\>rec son3.txt son3.mid\n\n");
        printf("(This will create a file called son3.mid which is\n");
        printf("a valid binary file)\n\n");
        printf("(dec.exe may also be useful, as it decodes binary files)\n\n");
        printf("Have Fun!!\n");
}

----------------------------- MIDIFILE.PS ---------------------------------
%-12345X@PJL ENTER LANGUAGE = POSTSCRIPT
%!PS-Adobe
/wpdict 120 dict def
wpdict  begin
/bdef   {bind def} bind def

/bflg   false def
/Bfont  0 def
/bon    false def

/psz    0 def
/_S     /show load def
/_t     {0 rmoveto} bdef

/_pixelsnap
        {transform .25 sub round .25 add
         exch .25 sub round .25 add exch itransform
        } bdef
/_pixeldsnap
        { dtransform round exch round exch idtransform } bdef

/_lt    {_pixelsnap lineto} bdef
/_rlt   {_pixeldsnap rlineto} bdef
/_mt    {_pixelsnap moveto} bdef
/_rmt   {_pixeldsnap rmoveto} bdef

/bshow  {gsave psz 30 div 0 _rmt dup show grestore show} bdef

/DUx    0 def
/DUy    0 def
/hscl   0 def

/M      {_mt
         2 mul -2 2
         { -2 roll 0 _rmt _S } for
        } bdef

/makeoutl
        { dup /OutlineFlag known not
          { dup dup length 2 add dict begin
            {1 index /FID ne { def }{ pop pop } ifelse } forall
            /UniqueID known {/UniqueID UniqueID 10000 add def} if
            /PaintType PaintType 0 eq { 2 }{ PaintType } ifelse def
            /StrokeWidth 15 def
            /OutlineFlag true def
            /OutlineFont currentdict end definefont
          } if
        } bdef

/nbuff  50 string def
/orntsv 0 def
/plen   0 def
/pwid   0 def
/picstr 1 string def

/WPencoding StandardEncoding 256 array copy def 0
 [ 127/Aacute/Acircumflex/Adieresis/Agrave/Aring/Atilde/Ccedilla
  /Delta/Eacute/Ecircumflex/Edieresis/Egrave/Eth/Gamma/Iacute
  /Icircumflex/Idieresis/Igrave/Lambda/Ntilde/Oacute
  /Ocircumflex/Odieresis/Ograve/Omega/Otilde/Phi/Pi/Psi
  /Scaron/Sigma/TeXtext32/Theta/Thorn
  209/Uacute/Ucircumflex/Udieresis/Ugrave/Upsilon/Xi/Yacute
  /Ydieresis/Zcaron/aacute/acircumflex/adieresis/agrave
  /aring/atilde/brokenbar
  228/ccedilla/copyright/degree/divide
  236/dotlessj/eacute/ecircumflex/edieresis/egrave
  242/eth/ff/ffi
  246/ffl/iacute
  252/icircumflex/idieresis/igrave/logicalnot
  1/minus/mu/multiply/ntilde/oacute/ocircumflex/odieresis
  /ograve/onehalf/onequarter/onesuperior/otilde/plusminus
  /registered/scaron/thorn/threequarters/threesuperior
  /trademark/twosuperior/uacute/ucircumflex/udieresis
  /ugrave/yacute/ydieresis/zcaron
]
{ dup type /nametype eq
  { WPencoding 2 index 2 index put pop 1 add }
  { exch pop } ifelse
} forall pop

/reencode
{ dup FontDirectory exch known
   { findfont }
   {  dup nbuff cvs dup length 1 sub get 82 eq
   {dup nbuff cvs dup length 1 sub 0 exch getinterval
   findfont begin
   currentdict dup length dict begin
{ 1 index /FID ne {def} {pop pop} ifelse } forall
/FontName exch def

/Encoding WPencoding def
currentdict dup end end
/FontName get exch definefont
     }
     { findfont } ifelse
  } ifelse
} bdef

/WPDLencoding StandardEncoding 256 array copy def 0
[ 127     /SA420000/SD630000/SF010000/SF020000/SF030000
/SF040000/SF050000/SF060000/SF070000/SF080000/SF090000
/SF100000/SF110000/SF140000/SF150000/SF160000/SF190000
/SF200000/SF210000/SF220000/SF230000/SF240000/SF250000/SF260000
/SF270000/SF280000/SF360000/SF370000/SF380000/SF390000/SF400000
/SF410000/SF420000/SF430000
209 /SF440000/SF450000/SF460000/SF470000/SF480000
/SF490000/SF500000/SF510000/SF520000/SF530000/SF540000
/SF570000/SF580000/SF590000/SF600000/SF610000
228 /SM570001/SM590000/SM600000/SM630000
236 /SM680000/SM690000/SM700000/SM750000/SM750002
242 /SM770000/SM790000/SP320000
246 /SS000000/SS010000
252 /SS260000/SS270000/SV040000/apostrophereverse
1/arrowboth/arrowdown/arrowleft/arrowright/arrowup/club
/deutschmark/diamond/diamondopen/exclamdbl/female
/fiveeighths/franc/heart/male/musicalnote/musicalnotedbl
/napostrophe/nsuperior/oneeighths/seveneighths/spade
/threeeights/underscoredbl/SM760000
]
{ dup type /nametype eq
  { WPDLencoding 2 index 2 index put pop 1 add }
  { exch pop } ifelse
} forall pop

/reencodeL
    { dup FontDirectory exch known
      { findfont }
      {  dup nbuff cvs dup length 1 sub get 76 eq
         {    dup nbuff cvs dup length 1 sub 0 exch getinterval
         findfont begin
         currentdict dup length dict begin
         { 1 index /FID ne {def} {pop pop} ifelse } forall
         /FontName exch def
         /Encoding WPDLencoding def
         currentdict dup end end
         /FontName get exch definefont
         }
         { findfont } ifelse
      } ifelse
    } bdef

/ron    false def
/sflg   false def
/slan   0 def
/sp     32 def

/sshow
        { save exch
           gsave
            psz 20 div dup neg _rmt dup show
           grestore
           dup
           save exch
            Bfont setfont
            1 setgray show
           restore
           currentfont makeoutl setfont show
           currentpoint 3 -1 roll
          restore _mt
        } bdef

/Sx     0 def
/Sy     0 def
/Ux     0 def
/Uy     0 def
/W      /widthshow load def

/_B     {/bflg true def
         sflg not {/_S /bshow load def /bon true def} if
        } bdef
/_b     {/bflg false def
         bon {/_S /show load def /bon false def} if
        } bdef
/_bd    {save} bdef
/_bp    {save 2 setmiterlimit .06 .06 scale 0 0 _mt} bdef
/_ccprocs
        {/proc2 exch cvlit def
         /proc1 exch cvlit def
         /newproc proc1 length proc2 length add
         array def
         newproc 0 proc1 putinterval
         newproc proc1 length proc2 putinterval
         newproc cvx
        } def
/_clr   {3 {255 div 3 1 roll} repeat
         ron {6 3 roll pop pop pop} {setrgbcolor} ifelse
        } bdef
/_cp    /closepath load def
/_cw    {stroke initclip _mt 0 2 index
         _rlt 0 _rlt 0 exch neg
         _rlt clip newpath
        } bdef
/_d     /setdash load def
/_DU    {currentpoint /DUy exch def /DUx exch def} bdef
/_du    {gsave
          save
          8 setlinewidth
      currentpoint -30 add _mt
      DUx DUy -30 add _lt stroke
          restore
          8 setlinewidth
          currentpoint -50 add _mt
          DUx DUy -50 add _lt stroke
         grestore
        } bdef
/_ed    {restore} bdef
/_ep    {restore showpage 0 0 _mt} bdef
/_f     /eofill load def
/_ff    { exch reencode exch
          3 div dup /psz exch def
          scalefont dup /Bfont exch def setfont
        } bdef
/_ffs   { /slan exch 10 div def /hscl exch 1000 div def
          /psz exch 3 div def
          [ psz hscl mul 0 slan dup sin exch cos div psz mul psz 0 0 ]
          exch reencode exch makefont dup /Bfont exch def setfont
        } bdef
/_g     /setgray load def
/_gs    {neg 100 add 100 div setgray} bdef
/_i     {gsave
          dup /picstr exch 7 add 8 idiv string def
          3 1 roll translate dup 1 scale
          dup 1 1 [5 -1 roll 0 0 1 0 0]
          {currentfile picstr readhexstring pop} image
         grestore
        } bdef
/_is    {save 4 1 roll
          dup /picstr exch 7 add 8 idiv string def
          3 1 roll translate dup 1 scale
          dup 1 1 [5 -1 roll 0 0 1 0 0]
          {currentfile picstr readhexstring pop} image
         restore
        } bdef
/_ie    {1 eq { {1 exch sub} currenttransfer _ccprocs settransfer} if
         /_isx exch def /_isy exch def
         _isx mul exch _isy mul translate
         add 2 div /_txc exch def
         add 2 div /_tyc exch def
         _txc _isx mul _tyc _isy mul translate
         360 exch sub rotate
         1 eq { _isx neg _isy scale }
         { _isx _isy scale }
         ifelse _txc neg _tyc neg translate
        } bdef
/_irms  {save
          12 1 roll
          1 eq {{1 exch sub} currenttransfer _ccprocs settransfer} if
          /picstr exch string def translate
          2 index 6 index sub 2 div 2 index 6 index sub 2 div neg
          translate
          5 index 5 index 2 div neg exch 2 div exch
          2 copy neg exch neg exch 5 2 roll translate
          360 exch sub rotate
          3 index 3 index 7 index div exch 8 index div exch scale
          translate pop pop 2 index 2 index scale
          3 index 0 eq
          { [ 3 index 0 0 5 index neg 0 0 ] }
          { 3 index 1 eq
      { [ 3 index 0 0 5 index 0 7 index ] }
      { 3 index 128 eq
          { [ 3 index neg 0 0 5 index neg 7 index 0 ] }
          { [ 3 index neg 0 0 5 index 7 index 7 index ] } ifelse
            } ifelse
          } ifelse
          {currentfile picstr readhexstring pop} image
          pop
         restore
        } bdef

/_l     {_lt} bdef
/_lr    {_rlt} bdef
/_m     {_mt} bdef
/_O     {currentfont makeoutl setfont} bdef
/_o     {Bfont setfont} bdef
/_ornt  {/pwid exch def /plen exch def
         orntsv 1 eq {0 pwid translate -90 rotate} if
         orntsv 2 eq {pwid plen translate 180 rotate} if
         orntsv 3 eq {plen 0 translate 90 rotate} if
         dup 1 eq {pwid 0 translate 90 rotate} if
         dup 2 eq {pwid plen translate 180 rotate} if
         dup 3 eq {0 plen translate -90 rotate} if
         /orntsv exch def
        } bdef
/_lod1  {currentpoint orntsv plen pwid 6 -1 roll restore save} bdef
/_lod2  {_bp 7 2 roll _ornt _mt} bdef
/_unlod {currentpoint orntsv plen pwid 7 -2 roll restore restore
         _bp 6 1 roll _ornt _mt
        } bdef
/_p     {2 copy _mt 1 0 _rlt _mt} bdef
/_pl    {{_lt} repeat} bdef
/_R      { /ron true def /_S /_rshow load def /_t /_red load def} bdef
/_rshow  { save exch
           currentpoint
           /RSy exch def /RSx exch def
           ron {
                 sflg
                 {      currentpoint
                        /Ry exch def /Rx exch def
                        dup stringwidth pop Rx Ry psz 4 div add _mt
                        Rx psz 15 add setlinewidth .95 setgray 0 setlinecap
                        add Ry psz 4 div add _lt stroke Rx Ry _mt 0 0 0 setrgbcolor
                        dup show Rx Ry _mt
                        sshow
                 }
                 { _redshow
                 }ifelse
           }
           {     sflg {sshow} if
           }ifelse
           currentpoint 3 -1 roll
           restore _mt
         } bdef
/_red   { gsave dup
         currentpoint /Ry exch def /Rx exch def
         Rx Ry psz 4 div add _mt
         Rx psz 15 add setlinewidth .95 setgray 0 setlinecap
         add Ry psz 4 div add _lt stroke
         Rx Ry _mt
         grestore
         0 rmoveto
    }bdef
/_redshow {currentpoint
         /Ry exch def /Rx exch def
         dup stringwidth pop Rx Ry psz 4 div add _mt
         Rx psz 15 add setlinewidth .95 setgray 0 setlinecap
         add Ry psz 4 div add _lt stroke Rx Ry _mt 0 0 0 setrgbcolor
         show currentpoint _mt
    }bdef
/_rmxy  {_rmt} bdef
/_s     /stroke load def
/_SH    bon {/bon false def} if
        {/sflg true def /_S /_rshow load def
        } bdef
/_sh    { ron   {/sflg false def bflg {_B} if}
                {/_S /show load def /sflg false def bflg {_B} if}ifelse
        }bdef
/_sp    { gsave stroke grestore } bdef
/_ST    {currentpoint /Sy exch def /Sx exch def} bdef
/_st    {gsave
          currentpoint pop
          Sx dup Sy _mt sub
          (\320) stringwidth pop div
          dup floor cvi dup
      dup 0 gt {{(\320) show} repeat}{pop} ifelse sub
          dup 0 gt {1 scale (\320) show}{pop} ifelse
         grestore
        } bdef
/_U     {currentpoint /Uy exch def /Ux exch def} bdef
/_u     {gsave
          currentpoint
          -30 add _mt
          Ux Uy -30 add _lt
          12 setlinewidth
          stroke
         grestore
        } bdef
/_w     /setlinewidth load def
end
/#copies 1 def /wpdict2 100 dict def
wpdict begin wpdict2 begin

_bd
/_rhs{readhexstring}bdef/_tr{translate}bdef
/_ix{index}bdef/_mx{matrix}bdef
/ife{ifelse}bdef/_x{exch}bdef
/_is{save 4 1 roll
dup/picstr _x 7 add 8 idiv string def
3 1 roll _tr dup 1 scale
dup 1 1[5 -1 roll 0 0 1 0 0]
{currentfile picstr _rhs pop}image restore}bdef
/_epsi{1 eq{{1 _x sub}currenttransfer _ccprocs settransfer}if
/yp _x def/xp _x def/dhgt _x def/dwid _x def
4 copy sub/swid _x def
sub/shgt _x def
add 2 div/icx _x def add 2 div/icy _x def
xp dwid 2 div add icx sub yp dhgt 2 div sub
icy sub _tr icx icy _tr
360 _x sub rotate
dwid swid div/xsc _x def _x
dhgt shgt div/ysc _x def _x
dup 1 eq{xsc neg/xsc _x def pop}
{dup 2 eq{ysc neg /ysc _x def pop}
{3 eq{ysc neg/ysc _x def xsc neg/xsc _x def}
{}ife}ife}ife
xsc ysc scale
100 div _x 100 div _x scale
icx neg icy neg _tr}bdef
/_c{3{255 div 3 1 roll}repeat setrgbcolor}bdef
/eq3{3 copy 2 _ix eq{eq{true}{false}ife}{pop
pop false}ife}bdef
/g{255 div setgray}bdef
/_clr{ron{6 3 roll pop pop pop}{eq3{pop
pop g}{_c}ife}ife}bdef
/_r{/ron false def eq3{1 sub neg g pop
pop}{setrgbcolor}ife}bdef
/_ircms{save 15 1 roll
1 eq{{1 exch sub}currenttransfer _ccprocs settransfer}if
/pstr _x string def _tr
/Cli _x def/USy _x def/USx _x def/Rot _x def/HTd _x def
/WDd _x def/Bdep _x def/HTs _x def/WDs _x def/MIR _x def
USx 100 div USy 100 div scale
WDd WDs sub 2 div HTd HTs sub 2 div neg _tr
WDs HTs 2 div neg _x 2 div _x _tr
Rot 360 _x sub rotate WDd HTd HTs div _x WDs div _x scale
WDs 2 div neg HTs 2 div _tr
WDs HTs scale WDs HTs Bdep MIR 0
eq{[WDs 0 0 HTs neg 0 0]}{MIR 1 eq{[WDs 0 0 HTs 0 HTs]}
{MIR 128 eq{[WDs neg 0 0 HTs neg WDs 0]}
{[WDs neg 0 0 HTs WDs HTs]}ife}ife}ife
{currentfile pstr _rhs pop}Cli
0 eq{image}{false 3 colorimage}ife
restore}bdef
/_bp{save 2 setlinecap 2 setmiterlimit
.06 .06 scale 0 0 moveto}bdef
/tctm _mx def/trot _mx def/tscale _mx def/rmtx _mx def
/fr{72 0 rmtx defaultmatrix dtransform
/yres _x def/xres _x def
xres dup mul yres dup mul add sqrt}bdef
/sus{/spotf _x def/sang _x def/csz _x def
/m tctm currentmatrix def/rm sang trot rotate def
/sm csz dup tscale scale def
sm rm m m concatmatrix m concatmatrix pop
1 0 m dtransform /y1 _x def/x1 _x def
/veclength x1 dup mul y1 dup mul add sqrt def
/frcy fr veclength div def /nsang y1 x1 atan def
frcy nsang/spotf load setscreen}bdef
/bitis{/ybit _x def /xbit _x def
/bval bstring ybit bwidth mul xbit 8 idiv add get def
/mask 1 7 xbit 8 mod sub bitshift def
bval mask and 0 ne}bdef
/bps{/y _x def /x _x def
/xndx x 1 add 2 div bpside mul cvi def
/yndx y 1 add 2 div bpside mul cvi def
xndx yndx bitis
{/onb onb 1 add def 1}{/ofb ofb 1 add def 0}ife}bdef
/stpatt{/csz _x def /angle _x def /bwidth _x def
/bpside _x def /bstring _x def
/onb 0 def /ofb 0 def
csz angle /bps load
sus{}settransfer
ofb ofb onb add div _g}bdef
/_fp{8 1 0 cpi stpatt}bdef
/_pf{gsave eofill grestore}bdef
/_np{newpath}bdef/_lc{setlinecap}bdef
/_sr{/cpi _x def}bdef
/nbuff 50 string def
letter _bp 0 13200 10200 _ornt /NewCenturySchlbk-RomanR 500 _ff
0 13200 10200 _ornt 
/_r      { sflg {/_t {0 rmoveto}bdef /ron false def}
         { /_S /show load def /_t {0 rmoveto}bdef /ron false def}ifelse
     }bdef
8907 11870 _m
(1)_S 3462 11439 _m
/NewCenturySchlbk-RomanR 750 _ff
(Standard)_S 83 _t
(MIDI)_S 83 _t
(File)_S 83 _t
(Format)_S /NewCenturySchlbk-RomanR 500 _ff
4469 11220 _m
(Dustin)_S 56 _t
(Caldwell)_S 1800 10820 _m
(The)_S 56 _t
(standard)_S 56 _t
(MIDI)_S 56 _t
(file)_S 56 _t
(format)_S 56 _t
(is)_S 56 _t
(a)_S 56 _t
(very)_S 56 _t
(strange)_S 56 _t
(beast.)_S 56 _t
(When)_S 56 _t
(viewed)_S 56 _t
(as)_S 56 _t
(a)_S 56 _t
(whole,)_S 56 _t
(it)_S 56 _t
(can)_S 56 _t
(be)_S 1200 10620 _m
(quite)_S 56 _t
(overwhelming.)_S 56 _t
(Of)_S 56 _t
(course,)_S 56 _t
(no)_S 56 _t
(matter)_S 56 _t
(how)_S 56 _t
(you)_S 56 _t
(look)_S 56 _t
(at)_S 56 _t
(it,)_S 56 _t
(describing)_S 56 _t
(a)_S 56 _t
(piece)_S 56 _t
(of)_S 56 _t
(music)_S 56 _t
(in)_S 56 _t
(enough)_S 1200 10420 _m
(detail)_S 56 _t
(to)_S 56 _t
(be)_S 56 _t
(able)_S 56 _t
(to)_S 56 _t
(reproduce)_S 56 _t
(it)_S 56 _t
(accurately)_S 56 _t
(is)_S 56 _t
(no)_S 56 _t
(small)_S 56 _t
(task.)_S 56 _t
(So,)_S 56 _t
(while)_S 56 _t
(complicated,)_S 56 _t
(the)_S 56 _t
(structure)_S 56 _t
(of)_S 1200 10220 _m
(the)_S 56 _t
(midi)_S 56 _t
(file)_S 56 _t
(format)_S 56 _t
(is)_S 56 _t
(fairly)_S 56 _t
(intuitive)_S 56 _t
(when)_S 56 _t
(understood.)_S 56 _t
1800 10020 _m
(I)_S 56 _t
(must)_S 56 _t
(insert)_S 56 _t
(a)_S 56 _t
(disclaimer)_S 56 _t
(here)_S 56 _t
(that)_S 56 _t
(I)_S 56 _t
(am)_S 56 _t
(by)_S 56 _t
(no)_S 56 _t
(means)_S 56 _t
(an)_S 56 _t
(expert)_S 56 _t
(with)_S 56 _t
(midi)_S 56 _t
(nor)_S 56 _t
(midi)_S 56 _t
(files.)_S 56 _t
(I)_S 1200 9820 _m
(recently)_S 56 _t
(obtained)_S 56 _t
(a)_S 56 _t
(Gravis)_S 56 _t
(UltraSound)_S 56 _t
(board)_S 56 _t
(for)_S 56 _t
(my)_S 56 _t
(PC,)_S 56 _t
(and)_S 56 _t
(upon)_S 56 _t
(hearing)_S 56 _t
(a)_S 56 _t
(few)_S 56 _t
(midi)_S 56 _t
(files)_S 56 _t
(\(.MID\))_S 1200 9620 _m
(thought,)_S 56 _t
("Gee,)_S 56 _t
(I'd)_S 56 _t
(like)_S 56 _t
(to)_S 56 _t
(be)_S 56 _t
(able)_S 56 _t
(to)_S 56 _t
(make)_S 56 _t
(my)_S 56 _t
(own)_S 56 _t
(.MID)_S 56 _t
(files.")_S 56 _t
(Well,)_S 56 _t
(many)_S 56 _t
(aggravating)_S 56 _t
(hours)_S 56 _t
(later,)_S 1200 9420 _m
(I)_S 56 _t
(discovered)_S 56 _t
(that)_S 56 _t
(this)_S 56 _t
(was)_S 56 _t
(no)_S 56 _t
(trivial)_S 56 _t
(task.)_S 56 _t
(But,)_S 56 _t
(I)_S 56 _t
(couldn't)_S 56 _t
(let)_S 56 _t
(a)_S 56 _t
(stupid)_S 56 _t
(file)_S 56 _t
(format)_S 56 _t
(stop)_S 56 _t
(me.)_S 56 _t
(\(besides,)_S 56 _t
(I)_S 1200 9220 _m
(once)_S 56 _t
(told)_S 56 _t
(my)_S 56 _t
(wife)_S 56 _t
(that)_S 56 _t
(computers)_S 56 _t
(aren't)_S 56 _t
(really)_S 56 _t
(that)_S 56 _t
(hard)_S 56 _t
(to)_S 56 _t
(use,)_S 56 _t
(and)_S 56 _t
(I'd)_S 56 _t
(hate)_S 56 _t
(to)_S 56 _t
(be)_S 56 _t
(a)_S 56 _t
(hypocrite\))_S 56 _t
(So)_S 1200 9020 _m
(if)_S 56 _t
(any)_S 56 _t
(errors)_S 56 _t
(are)_S 56 _t
(found)_S 56 _t
(in)_S 56 _t
(this)_S 56 _t
(information,)_S 56 _t
(please)_S 56 _t
(let)_S 56 _t
(me)_S 56 _t
(know)_S 56 _t
(and)_S 56 _t
(I)_S 56 _t
(will)_S 56 _t
(fix)_S 56 _t
(it.)_S 56 _t
(Also,)_S 56 _t
(this)_S 1200 8820 _m
(document's)_S 56 _t
(scope)_S 56 _t
(does)_S 56 _t
(not)_S 56 _t
(extend)_S 56 _t
(to)_S 56 _t
(EVERY)_S 56 _t
(type)_S 56 _t
(of)_S 56 _t
(midi)_S 56 _t
(command)_S 56 _t
(and)_S 56 _t
(EVERY)_S 56 _t
(possible)_S 56 _t
(file)_S 1200 8620 _m
(configuration.)_S 56 _t
(It)_S 56 _t
(is)_S 56 _t
(a)_S 56 _t
(basic)_S 56 _t
(guide)_S 56 _t
(that)_S 56 _t
(should)_S 56 _t
(enable)_S 56 _t
(the)_S 56 _t
(reader)_S 56 _t
(\(with)_S 56 _t
(a)_S 56 _t
(moderate)_S 56 _t
(investment)_S 56 _t
(in)_S 1200 8420 _m
(time\))_S 56 _t
(to)_S 56 _t
(generate)_S 56 _t
(a)_S 56 _t
(quality)_S 56 _t
(midi)_S 56 _t
(file.)_S 1200 8020 _m
(1.)_S 56 _t
(Overview)_S 1800 7620 _m
(A)_S 56 _t
(midi)_S 56 _t
(\(.MID\))_S 56 _t
(file)_S 56 _t
(contains)_S 56 _t
(basically)_S 56 _t
(2)_S 56 _t
(things,)_S 56 _t
(Header)_S 56 _t
(chunks)_S 56 _t
(and)_S 56 _t
(Track)_S 56 _t
(chunks.)_S 56 _t
(Section)_S 56 _t
(2)_S 1200 7420 _m
(explains)_S 56 _t
(the)_S 56 _t
(header)_S 56 _t
(chunks,)_S 56 _t
(and)_S 56 _t
(Section)_S 56 _t
(3)_S 56 _t
(explains)_S 56 _t
(the)_S 56 _t
(track)_S 56 _t
(chunks.)_S 56 _t
(A)_S 56 _t
(midi)_S 56 _t
(file)_S 56 _t
(contains)_S 56 _t
(ONE)_S 1200 7220 _m
(header)_S 56 _t
(chunk)_S 56 _t
(describing)_S 56 _t
(the)_S 56 _t
(file)_S 56 _t
(format,)_S 56 _t
(etc.,)_S 56 _t
(and)_S 56 _t
(any)_S 56 _t
(number)_S 56 _t
(of)_S 56 _t
(track)_S 56 _t
(chunks.)_S 56 _t
(A)_S 56 _t
(track)_S 56 _t
(may)_S 56 _t
(be)_S 1200 7020 _m
(thought)_S 56 _t
(of)_S 56 _t
(in)_S 56 _t
(the)_S 56 _t
(same)_S 56 _t
(way)_S 56 _t
(as)_S 56 _t
(a)_S 56 _t
(track)_S 56 _t
(on)_S 56 _t
(a)_S 56 _t
(multi-track)_S 56 _t
(tape)_S 56 _t
(deck.)_S 56 _t
(You)_S 56 _t
(may)_S 56 _t
(assign)_S 56 _t
(one)_S 56 _t
(track)_S 56 _t
(to)_S 1200 6820 _m
(each)_S 56 _t
(voice,)_S 56 _t
(each)_S 56 _t
(staff,)_S 56 _t
(each)_S 56 _t
(instrument)_S 56 _t
(or)_S 56 _t
(whatever)_S 56 _t
(you)_S 56 _t
(want.)_S 56 _t
1200 6420 _m
(2.)_S 56 _t
(Header)_S 56 _t
(Chunk)_S 1800 6020 _m
(The)_S 56 _t
(header)_S 56 _t
(chunk)_S 56 _t
(appears)_S 56 _t
(at)_S 56 _t
(the)_S 56 _t
(beginning)_S 56 _t
(of)_S 56 _t
(the)_S 56 _t
(file,)_S 56 _t
(and)_S 56 _t
(describes)_S 56 _t
(the)_S 56 _t
(file)_S 56 _t
(in)_S 56 _t
(three)_S 56 _t
(ways.)_S 1200 5820 _m
(The)_S 56 _t
(header)_S 56 _t
(chunk)_S 56 _t
(always)_S 56 _t
(looks)_S 56 _t
(like:)_S 1200 5420 _m
(4D)_S 56 _t
(54)_S 56 _t
(68)_S 56 _t
(64)_S 56 _t
(00)_S 56 _t
(00)_S 56 _t
(00)_S 56 _t
(06)_S 56 _t
(ff)_S 56 _t
(ff)_S 56 _t
(nn)_S 56 _t
(nn)_S 56 _t
(dd)_S 56 _t
(dd)_S 1200 5020 _m
(The)_S 56 _t
(ascii)_S 56 _t
(equivalent)_S 56 _t
(of)_S 56 _t
(the)_S 56 _t
(first)_S 56 _t
(4)_S 56 _t
(bytes)_S 56 _t
(is)_S 56 _t
(MThd.)_S 56 _t
(After)_S 56 _t
(MThd)_S 56 _t
(comes)_S 56 _t
(the)_S 56 _t
(4-byte)_S 56 _t
(size)_S 56 _t
(of)_S 56 _t
(the)_S 56 _t
(header.)_S 1200 4820 _m
(This)_S 56 _t
(will)_S 56 _t
(always)_S 56 _t
(be)_S 56 _t
(00)_S 56 _t
(00)_S 56 _t
(00)_S 56 _t
(06,)_S 56 _t
(because)_S 56 _t
(the)_S 56 _t
(actual)_S 56 _t
(header)_S 56 _t
(information)_S 56 _t
(will)_S 56 _t
(always)_S 56 _t
(be)_S 56 _t
(6)_S 56 _t
(bytes.)_S 56 _t
1200 4420 _m
(ff)_S 56 _t
(ff)_S 56 _t
(is)_S 56 _t
(the)_S 56 _t
(file)_S 56 _t
(format.)_S 56 _t
(There)_S 56 _t
(are)_S 56 _t
(3)_S 56 _t
(formats:)_S 1200 4020 _m
(0)_S 56 _t
(-)_S 56 _t
(single-track)_S 56 _t
1200 3820 _m
(1)_S 56 _t
(-)_S 56 _t
(multiple)_S 56 _t
(tracks,)_S 56 _t
(synchronous)_S 1200 3620 _m
(2)_S 56 _t
(-)_S 56 _t
(multiple)_S 56 _t
(tracks,)_S 56 _t
(asynchronous)_S 1200 3220 _m
(Single)_S 56 _t
(track)_S 56 _t
(is)_S 56 _t
(fairly)_S 56 _t
(self-explanatory)_S 56 _t
(-)_S 56 _t
(one)_S 56 _t
(track)_S 56 _t
(only.)_S 56 _t
(Synchronous)_S 56 _t
(multiple)_S 56 _t
(tracks)_S 56 _t
(means)_S 56 _t
(that)_S 56 _t
(the)_S 1200 3020 _m
(tracks)_S 56 _t
(will)_S 56 _t
(all)_S 56 _t
(be)_S 56 _t
(vertically)_S 56 _t
(synchronous,)_S 56 _t
(or)_S 56 _t
(in)_S 56 _t
(other)_S 56 _t
(words,)_S 56 _t
(they)_S 56 _t
(all)_S 56 _t
(start)_S 56 _t
(at)_S 56 _t
(the)_S 56 _t
(same)_S 56 _t
(time,)_S 56 _t
(and)_S 56 _t
(so)_S 1200 2820 _m
(can)_S 56 _t
(represent)_S 56 _t
(different)_S 56 _t
(parts)_S 56 _t
(in)_S 56 _t
(one)_S 56 _t
(song.)_S 56 _t
(Asynchronous)_S 56 _t
(multiple)_S 56 _t
(tracks)_S 56 _t
(do)_S 56 _t
(not)_S 56 _t
(necessarily)_S 56 _t
(start)_S 56 _t
(at)_S 1200 2620 _m
(the)_S 56 _t
(same)_S 56 _t
(time,)_S 56 _t
(and)_S 56 _t
(can)_S 56 _t
(be)_S 56 _t
(completely)_S 56 _t
(asynchronous.)_S 56 _t
1200 2220 _m
(nn)_S 56 _t
(nn)_S 56 _t
(is)_S 56 _t
(the)_S 56 _t
(number)_S 56 _t
(of)_S 56 _t
(tracks)_S 56 _t
(in)_S 56 _t
(the)_S 56 _t
(midi)_S 56 _t
(file.)_S 1200 1820 _m
(dd)_S 56 _t
(dd)_S 56 _t
(is)_S 56 _t
(the)_S 56 _t
(number)_S 56 _t
(of)_S 56 _t
(delta-time)_S 56 _t
(ticks)_S 56 _t
(per)_S 56 _t
(quarter)_S 56 _t
(note.)_S 56 _t
(\(More)_S 56 _t
(about)_S 56 _t
(this)_S 56 _t
(later\))_S _ep
_bp /NewCenturySchlbk-RomanR 500 _ff
0 13200 10200 _ornt 
/_r      { sflg {/_t {0 rmoveto}bdef /ron false def}
         { /_S /show load def /_t {0 rmoveto}bdef /ron false def}ifelse
     }bdef
8907 11870 _m
(2)_S 1200 11503 _m
(3.)_S 56 _t
(Track)_S 56 _t
(Chunks)_S 1200 11103 _m
(The)_S 56 _t
(remainder)_S 56 _t
(of)_S 56 _t
(the)_S 56 _t
(file)_S 56 _t
(after)_S 56 _t
(the)_S 56 _t
(header)_S 56 _t
(chunk)_S 56 _t
(consists)_S 56 _t
(of)_S 56 _t
(track)_S 56 _t
(chunks.)_S 56 _t
(Each)_S 56 _t
(track)_S 56 _t
(has)_S 56 _t
(one)_S 1200 10903 _m
(header)_S 56 _t
(and)_S 56 _t
(may)_S 56 _t
(contain)_S 56 _t
(as)_S 56 _t
(many)_S 56 _t
(midi)_S 56 _t
(commands)_S 56 _t
(as)_S 56 _t
(you)_S 56 _t
(like.)_S 56 _t
(The)_S 56 _t
(header)_S 56 _t
(for)_S 56 _t
(a)_S 56 _t
(track)_S 56 _t
(is)_S 56 _t
(very)_S 1200 10703 _m
(similar)_S 56 _t
(to)_S 56 _t
(the)_S 56 _t
(one)_S 56 _t
(for)_S 56 _t
(the)_S 56 _t
(file:)_S 1200 10303 _m
(4D)_S 56 _t
(54)_S 56 _t
(72)_S 56 _t
(6B)_S 56 _t
(xx)_S 56 _t
(xx)_S 56 _t
(xx)_S 56 _t
(xx)_S 1200 9903 _m
(As)_S 56 _t
(with)_S 56 _t
(the)_S 56 _t
(header,)_S 56 _t
(the)_S 56 _t
(first)_S 56 _t
(4)_S 56 _t
(bytes)_S 56 _t
(has)_S 56 _t
(an)_S 56 _t
(ascii)_S 56 _t
(equivalent.)_S 56 _t
(This)_S 56 _t
(one)_S 56 _t
(is)_S 56 _t
(MTrk.)_S 56 _t
(The)_S 56 _t
(4)_S 56 _t
(bytes)_S 56 _t
(after)_S 1200 9703 _m
(MTrk)_S 56 _t
(give)_S 56 _t
(the)_S 56 _t
(length)_S 56 _t
(of)_S 56 _t
(the)_S 56 _t
(track)_S 56 _t
(\(not)_S 56 _t
(including)_S 56 _t
(the)_S 56 _t
(track)_S 56 _t
(header\))_S 56 _t
(in)_S 56 _t
(bytes.)_S 56 _t
1800 9503 _m
(Following)_S 56 _t
(the)_S 56 _t
(header)_S 56 _t
(are)_S 56 _t
(midi)_S 56 _t
(events.)_S 56 _t
(These)_S 56 _t
(events)_S 56 _t
(are)_S 56 _t
(identical)_S 56 _t
(to)_S 56 _t
(the)_S 56 _t
(actual)_S 56 _t
(data)_S 56 _t
(sent)_S 1200 9303 _m
(and)_S 56 _t
(received)_S 56 _t
(by)_S 56 _t
(MIDI)_S 56 _t
(ports)_S 56 _t
(on)_S 56 _t
(a)_S 56 _t
(synth)_S 56 _t
(with)_S 56 _t
(one)_S 56 _t
(addition.)_S 56 _t
(A)_S 56 _t
(midi)_S 56 _t
(event)_S 56 _t
(is)_S 56 _t
(preceded)_S 56 _t
(by)_S 56 _t
(a)_S 56 _t
(delta-time.)_S 1200 9103 _m
(A)_S 56 _t
(delta)_S 56 _t
(time)_S 56 _t
(is)_S 56 _t
(the)_S 56 _t
(number)_S 56 _t
(of)_S 56 _t
(ticks)_S 56 _t
(after)_S 56 _t
(which)_S 56 _t
(the)_S 56 _t
(midi)_S 56 _t
(event)_S 56 _t
(is)_S 56 _t
(to)_S 56 _t
(be)_S 56 _t
(executed.)_S 56 _t
(The)_S 56 _t
(number)_S 56 _t
(of)_S 1200 8903 _m
(ticks)_S 56 _t
(per)_S 56 _t
(quarter)_S 56 _t
(note)_S 56 _t
(was)_S 56 _t
(defined)_S 56 _t
(previously)_S 56 _t
(in)_S 56 _t
(the)_S 56 _t
(file)_S 56 _t
(header)_S 56 _t
(chunk.)_S 56 _t
(This)_S 56 _t
(delta-time)_S 56 _t
(is)_S 56 _t
(a)_S 1200 8703 _m
(variable-length)_S 56 _t
(encoded)_S 56 _t
(value.)_S 56 _t
(This)_S 56 _t
(format,)_S 56 _t
(while)_S 56 _t
(confusing,)_S 56 _t
(allows)_S 56 _t
(large)_S 56 _t
(numbers)_S 56 _t
(to)_S 56 _t
(use)_S 56 _t
(as)_S 56 _t
(many)_S 1200 8503 _m
(bytes)_S 56 _t
(as)_S 56 _t
(they)_S 56 _t
(need,)_S 56 _t
(without)_S 56 _t
(requiring)_S 56 _t
(small)_S 56 _t
(numbers)_S 56 _t
(to)_S 56 _t
(waste)_S 56 _t
(bytes)_S 56 _t
(by)_S 56 _t
(filling)_S 56 _t
(with)_S 56 _t
(zeros.)_S 56 _t
(The)_S 1200 8303 _m
(number)_S 56 _t
(is)_S 56 _t
(converted)_S 56 _t
(into)_S 56 _t
(7-bit)_S 56 _t
(bytes,)_S 56 _t
(and)_S 56 _t
(the)_S 56 _t
(most-significant)_S 56 _t
(bit)_S 56 _t
(of)_S 56 _t
(each)_S 56 _t
(byte)_S 56 _t
(is)_S 56 _t
(1)_S 56 _t
(except)_S 56 _t
(for)_S 56 _t
(the)_S 1200 8103 _m
(last)_S 56 _t
(byte)_S 56 _t
(of)_S 56 _t
(the)_S 56 _t
(number,)_S 56 _t
(which)_S 56 _t
(has)_S 56 _t
(a)_S 56 _t
(msb)_S 56 _t
(of)_S 56 _t
(0.)_S 56 _t
(This)_S 56 _t
(allows)_S 56 _t
(the)_S 56 _t
(number)_S 56 _t
(to)_S 56 _t
(be)_S 56 _t
(read)_S 56 _t
(one)_S 56 _t
(byte)_S 56 _t
(at)_S 56 _t
(a)_S 1200 7903 _m
(time,)_S 56 _t
(and)_S 56 _t
(when)_S 56 _t
(you)_S 56 _t
(see)_S 56 _t
(a)_S 56 _t
(msb)_S 56 _t
(of)_S 56 _t
(0,)_S 56 _t
(you)_S 56 _t
(know)_S 56 _t
(that)_S 56 _t
(it)_S 56 _t
(was)_S 56 _t
(the)_S 56 _t
(last)_S 56 _t
(\(least)_S 56 _t
(significant\))_S 56 _t
(byte)_S 56 _t
(of)_S 56 _t
(the)_S 1200 7703 _m
(number.)_S 56 _t
(According)_S 56 _t
(to)_S 56 _t
(the)_S 56 _t
(MIDI)_S 56 _t
(spec,)_S 56 _t
(the)_S 56 _t
(entire)_S 56 _t
(delta-time)_S 56 _t
(should)_S 56 _t
(be)_S 56 _t
(at)_S 56 _t
(most)_S 56 _t
(4)_S 56 _t
(bytes)_S 56 _t
(long.)_S 56 _t
1800 7503 _m
(Following)_S 56 _t
(the)_S 56 _t
(delta-time)_S 56 _t
(is)_S 56 _t
(a)_S 56 _t
(midi)_S 56 _t
(event.)_S 56 _t
(Each)_S 56 _t
(midi)_S 56 _t
(event)_S 56 _t
(\(except)_S 56 _t
(a)_S 56 _t
(running)_S 56 _t
(midi)_S 56 _t
(event\))_S 1200 7303 _m
(has)_S 56 _t
(a)_S 56 _t
(command)_S 56 _t
(byte)_S 56 _t
(which)_S 56 _t
(will)_S 56 _t
(always)_S 56 _t
(have)_S 56 _t
(a)_S 56 _t
(msb)_S 56 _t
(of)_S 56 _t
(1)_S 56 _t
(\(the)_S 56 _t
(value)_S 56 _t
(will)_S 56 _t
(be)_S 56 _t
(>=)_S 56 _t
(128\).)_S 56 _t
(A)_S 56 _t
(list)_S 56 _t
(of)_S 56 _t
(most)_S 56 _t
(of)_S 1200 7103 _m
(these)_S 56 _t
(commands)_S 56 _t
(is)_S 56 _t
(in)_S 56 _t
(appendix)_S 56 _t
(A.)_S 56 _t
(Each)_S 56 _t
(command)_S 56 _t
(has)_S 56 _t
(different)_S 56 _t
(parameters)_S 56 _t
(and)_S 56 _t
(lengths,)_S 56 _t
(but)_S 56 _t
(the)_S 1200 6903 _m
(data)_S 56 _t
(that)_S 56 _t
(follows)_S 56 _t
(the)_S 56 _t
(command)_S 56 _t
(will)_S 56 _t
(have)_S 56 _t
(a)_S 56 _t
(msb)_S 56 _t
(of)_S 56 _t
(0)_S 56 _t
(\(less)_S 56 _t
(than)_S 56 _t
(128\).)_S 56 _t
(The)_S 56 _t
(exception)_S 56 _t
(to)_S 56 _t
(this)_S 56 _t
(is)_S 56 _t
(a)_S 1200 6703 _m
(meta-event,)_S 56 _t
(which)_S 56 _t
(may)_S 56 _t
(contain)_S 56 _t
(data)_S 56 _t
(with)_S 56 _t
(a)_S 56 _t
(msb)_S 56 _t
(of)_S 56 _t
(1.)_S 56 _t
(However,)_S 56 _t
(meta-events)_S 56 _t
(require)_S 56 _t
(a)_S 56 _t
(length)_S 1200 6503 _m
(parameter)_S 56 _t
(which)_S 56 _t
(alleviates)_S 56 _t
(confusion.)_S 56 _t
1800 6303 _m
(One)_S 56 _t
(subtlety)_S 56 _t
(which)_S 56 _t
(can)_S 56 _t
(cause)_S 56 _t
(confusion)_S 56 _t
(is)_S 56 _t
(running)_S 56 _t
(mode.)_S 56 _t
(This)_S 56 _t
(is)_S 56 _t
(where)_S 56 _t
(the)_S 56 _t
(actual)_S 56 _t
(midi)_S 1200 6103 _m
(command)_S 56 _t
(is)_S 56 _t
(omitted,)_S 56 _t
(and)_S 56 _t
(the)_S 56 _t
(last)_S 56 _t
(midi)_S 56 _t
(command)_S 56 _t
(issued)_S 56 _t
(is)_S 56 _t
(assumed.)_S 56 _t
(This)_S 56 _t
(means)_S 56 _t
(that)_S 56 _t
(the)_S 56 _t
(midi)_S 1200 5903 _m
(event)_S 56 _t
(will)_S 56 _t
(consist)_S 56 _t
(of)_S 56 _t
(a)_S 56 _t
(delta-time)_S 56 _t
(and)_S 56 _t
(the)_S 56 _t
(parameters)_S 56 _t
(that)_S 56 _t
(would)_S 56 _t
(go)_S 56 _t
(to)_S 56 _t
(the)_S 56 _t
(command)_S 56 _t
(if)_S 56 _t
(it)_S 56 _t
(were)_S 1200 5703 _m
(included.)_S 56 _t
1200 5303 _m
(4.)_S 56 _t
(Conclusion)_S 1800 4903 _m
(If)_S 56 _t
(this)_S 56 _t
(explanation)_S 56 _t
(has)_S 56 _t
(only)_S 56 _t
(served)_S 56 _t
(to)_S 56 _t
(confuse)_S 56 _t
(the)_S 56 _t
(issue)_S 56 _t
(more,)_S 56 _t
(the)_S 56 _t
(appendices)_S 56 _t
(contain)_S 1200 4703 _m
(examples)_S 56 _t
(which)_S 56 _t
(may)_S 56 _t
(help)_S 56 _t
(clarify)_S 56 _t
(the)_S 56 _t
(issue.)_S 56 _t
(Also,)_S 56 _t
(2)_S 56 _t
(utilities)_S 56 _t
(and)_S 56 _t
(a)_S 56 _t
(graphic)_S 56 _t
(file)_S 56 _t
(should)_S 56 _t
(have)_S 56 _t
(been)_S 1200 4503 _m
(included)_S 56 _t
(with)_S 56 _t
(this)_S 56 _t
(document:)_S 56 _t
1200 4103 _m
(DEC.EXE)_S 56 _t
(-)_S 56 _t
(This)_S 56 _t
(utility)_S 56 _t
(converts)_S 56 _t
(a)_S 56 _t
(binary)_S 56 _t
(file)_S 56 _t
(\(like)_S 56 _t
(.MID\))_S 56 _t
(to)_S 56 _t
(a)_S 56 _t
(tab-delimited)_S 56 _t
(text)_S 56 _t
(file)_S 56 _t
(containing)_S 56 _t
(the)_S 1200 3903 _m
(decimal)_S 56 _t
(equivalents)_S 56 _t
(of)_S 56 _t
(each)_S 56 _t
(byte.)_S 1200 3503 _m
(REC.EXE)_S 56 _t
(-)_S 56 _t
(This)_S 56 _t
(utility)_S 56 _t
(converts)_S 56 _t
(a)_S 56 _t
(tab-delimited)_S 56 _t
(text)_S 56 _t
(file)_S 56 _t
(of)_S 56 _t
(decimal)_S 56 _t
(values)_S 56 _t
(into)_S 56 _t
(a)_S 56 _t
(binary)_S 56 _t
(file)_S 56 _t
(in)_S 1200 3303 _m
(which)_S 56 _t
(each)_S 56 _t
(byte)_S 56 _t
(corresponds)_S 56 _t
(to)_S 56 _t
(one)_S 56 _t
(of)_S 56 _t
(the)_S 56 _t
(decimal)_S 56 _t
(values.)_S 1200 2903 _m
(MIDINOTE.PS)_S 56 _t
(-)_S 56 _t
(This)_S 56 _t
(is)_S 56 _t
(the)_S 56 _t
(postscript)_S 56 _t
(form)_S 56 _t
(of)_S 56 _t
(a)_S 56 _t
(page)_S 56 _t
(showing)_S 56 _t
(note)_S 56 _t
(numbers)_S 56 _t
(with)_S 56 _t
(a)_S 56 _t
(keyboard)_S 56 _t
(and)_S 1200 2703 _m
(with)_S 56 _t
(the)_S 56 _t
(standard)_S 56 _t
(grand)_S 56 _t
(staff.)_S _ep
_bp /NewCenturySchlbk-RomanR 500 _ff
0 13200 10200 _ornt 
/_r      { sflg {/_t {0 rmoveto}bdef /ron false def}
         { /_S /show load def /_t {0 rmoveto}bdef /ron false def}ifelse
     }bdef
8907 11870 _m
(3)_S 4645 11503 _m
(Appendix)_S 56 _t
(A)_S 1200 11103 _m
(1.)_S 56 _t
(MIDI)_S 56 _t
(Event)_S 56 _t
(Commands)_S 1200 10703 _m
(Each)_S 56 _t
(command)_S 56 _t
(byte)_S 56 _t
(has)_S 56 _t
(2)_S 56 _t
(parts.)_S 56 _t
(The)_S 56 _t
(left)_S 56 _t
(nybble)_S 56 _t
(\(4)_S 56 _t
(bits\))_S 56 _t
(contains)_S 56 _t
(the)_S 56 _t
(actual)_S 56 _t
(command,)_S 56 _t
(and)_S 56 _t
(the)_S 1200 10503 _m
(right)_S 56 _t
(nybble)_S 56 _t
(contains)_S 56 _t
(the)_S 56 _t
(midi)_S 56 _t
(channel)_S 56 _t
(number)_S 56 _t
(on)_S 56 _t
(which)_S 56 _t
(the)_S 56 _t
(command)_S 56 _t
(will)_S 56 _t
(be)_S 56 _t
(executed.)_S 56 _t
(There)_S 56 _t
(are)_S 1200 10303 _m
(16)_S 56 _t
(midi)_S 56 _t
(channels,)_S 56 _t
(and)_S 56 _t
(8)_S 56 _t
(midi)_S 56 _t
(commands)_S 56 _t
(\(the)_S 56 _t
(command)_S 56 _t
(nybble)_S 56 _t
(must)_S 56 _t
(have)_S 56 _t
(a)_S 56 _t
(msb)_S 56 _t
(of)_S 56 _t
(1\).)_S 1200 10103 _m
(In)_S 56 _t
(the)_S 56 _t
(following)_S 56 _t
(table,)_S 56 _t
(x)_S 56 _t
(indicates)_S 56 _t
(the)_S 56 _t
(midi)_S 56 _t
(channel)_S 56 _t
(number.)_S 56 _t
(Note)_S 56 _t
(that)_S 56 _t
(all)_S 56 _t
(data)_S 56 _t
(bytes)_S 56 _t
(will)_S 56 _t
(be)_S 56 _t
(<128)_S 1200 9903 _m
(\(msb)_S 56 _t
(set)_S 56 _t
(to)_S 56 _t
(0\).)_S 1200 9503 _m
_U (Hex)_S 2109 9503 _m
(Binary)_S 3422 9503 _m
(Data)_S 4836 9503 _m
(Description)_S _u 1200 9303 _m
(8x)_S 2109 9303 _m
(1000xxxx)_S 3422 9303 _m
(nn)_S 56 _t
(vv)_S 4836 9303 _m
(Note)_S 56 _t
(off)_S 56 _t
(\(key)_S 56 _t
(is)_S 56 _t
(released\))_S 4836 9103 _m
(nn=note)_S 56 _t
(number)_S 4836 8903 _m
(vv=velocity)_S 1200 8503 _m
(9x)_S 2109 8503 _m
(1001xxxx)_S 3422 8503 _m
(nn)_S 56 _t
(vv)_S 4836 8503 _m
(Note)_S 56 _t
(on)_S 56 _t
(\(key)_S 56 _t
(is)_S 56 _t
(pressed\))_S 4836 8303 _m
(nn=note)_S 56 _t
(number)_S 4836 8103 _m
(vv=velocity)_S 1200 7703 _m
(Ax)_S 2109 7703 _m
(1010xxxx)_S 3422 7703 _m
(nn)_S 56 _t
(vv)_S 4836 7703 _m
(Key)_S 56 _t
(after-touch)_S 4836 7503 _m
(nn=note)_S 56 _t
(number)_S 4836 7303 _m
(vv=velocity)_S 1200 6903 _m
(Bx)_S 2109 6903 _m
(1011xxxx)_S 3422 6903 _m
(cc)_S 56 _t
(vv)_S 4836 6903 _m
(Control)_S 56 _t
(Change)_S 4836 6703 _m
(cc=controller)_S 56 _t
(number)_S 4836 6503 _m
(vv=new)_S 56 _t
(value)_S 1200 6103 _m
(Cx)_S 2109 6103 _m
(1100xxxx)_S 3422 6103 _m
(pp)_S 4836 6103 _m
(Program)_S 56 _t
(\(patch\))_S 56 _t
(change)_S 4836 5903 _m
(pp=new)_S 56 _t
(program)_S 56 _t
(number)_S 1200 5503 _m
(Dx)_S 2109 5503 _m
(1101xxxx)_S 3422 5503 _m
(cc)_S 4836 5503 _m
(Channel)_S 56 _t
(after-touch)_S 4836 5303 _m
(cc=channel)_S 56 _t
(number)_S 1200 4903 _m
(Ex)_S 2109 4903 _m
(1110xxxx)_S 3422 4903 _m
(bb)_S 56 _t
(tt)_S 4836 4903 _m
(Pitch)_S 56 _t
(wheel)_S 56 _t
(change)_S 56 _t
(\(2000H)_S 56 _t
(is)_S 56 _t
(normal)_S 56 _t
(or)_S 56 _t
(no)_S 56 _t
(change\))_S 4836 4703 _m
(bb=bottom)_S 56 _t
(\(least)_S 56 _t
(sig\))_S 56 _t
(7)_S 56 _t
(bits)_S 56 _t
(of)_S 56 _t
(value)_S 4836 4503 _m
(tt=top)_S 56 _t
(\(most)_S 56 _t
(sig\))_S 56 _t
(7)_S 56 _t
(bits)_S 56 _t
(of)_S 56 _t
(value)_S _ep
_bp /NewCenturySchlbk-RomanR 500 _ff
0 13200 10200 _ornt 
/_r      { sflg {/_t {0 rmoveto}bdef /ron false def}
         { /_S /show load def /_t {0 rmoveto}bdef /ron false def}ifelse
     }bdef
8907 11870 _m
(4)_S 1200 11503 _m
(The)_S 56 _t
(following)_S 56 _t
(table)_S 56 _t
(lists)_S 56 _t
(meta-events)_S 56 _t
(which)_S 56 _t
(have)_S 56 _t
(no)_S 56 _t
(midi)_S 56 _t
(channel)_S 56 _t
(number.)_S 56 _t
(They)_S 56 _t
(are)_S 56 _t
(of)_S 56 _t
(the)_S 56 _t
(format:)_S 1200 11103 _m
(FF)_S 56 _t
(xx)_S 56 _t
(nn)_S 56 _t
(dd)_S 1200 10703 _m
(All)_S 56 _t
(meta-events)_S 56 _t
(start)_S 56 _t
(with)_S 56 _t
(FF)_S 56 _t
(followed)_S 56 _t
(by)_S 56 _t
(the)_S 56 _t
(command)_S 56 _t
(\(xx\),)_S 56 _t
(the)_S 56 _t
(length,)_S 56 _t
(or)_S 56 _t
(number)_S 56 _t
(of)_S 56 _t
(bytes)_S 56 _t
(that)_S 1200 10503 _m
(will)_S 56 _t
(contain)_S 56 _t
(data)_S 56 _t
(\(nn\),)_S 56 _t
(and)_S 56 _t
(the)_S 56 _t
(actual)_S 56 _t
(data)_S 56 _t
(\(dd\).)_S 1200 10103 _m
_U (Hex)_S 2109 10103 _m
(Binary)_S 3422 10103 _m
(Data)_S 4836 10103 _m
(Description)_S _u 1200 9903 _m
(00)_S 2109 9903 _m
(00000000)_S 3422 9903 _m
(nn)_S 56 _t
(ssss)_S 4836 9903 _m
(Sets)_S 56 _t
(the)_S 56 _t
(track's)_S 56 _t
(sequence)_S 56 _t
(number.)_S 4836 9703 _m
(nn=02)_S 56 _t
(\(length)_S 56 _t
(of)_S 56 _t
(2-byte)_S 56 _t
(sequence)_S 56 _t
(number\))_S 4836 9503 _m
(ssss=sequence)_S 56 _t
(number)_S 1200 9103 _m
(01)_S 2109 9103 _m
(00000001)_S 3422 9103 _m
(nn)_S 56 _t
(tt)_S 56 _t
(..)_S 4836 9103 _m
(Text)_S 56 _t
(event-)_S 56 _t
(any)_S 56 _t
(text)_S 56 _t
(you)_S 56 _t
(want.)_S 4836 8903 _m
(nn=length)_S 56 _t
(in)_S 56 _t
(bytes)_S 56 _t
(of)_S 56 _t
(text)_S 4836 8703 _m
(tt=text)_S 56 _t
(characters)_S 1200 8303 _m
(02)_S 2109 8303 _m
(00000010)_S 3422 8303 _m
(nn)_S 56 _t
(tt)_S 56 _t
(..)_S 4836 8303 _m
(Same)_S 56 _t
(as)_S 56 _t
(text)_S 56 _t
(event,)_S 56 _t
(but)_S 56 _t
(used)_S 56 _t
(for)_S 56 _t
(copyright)_S 56 _t
(info.)_S 4836 8103 _m
(nn)_S 56 _t
(tt=same)_S 56 _t
(as)_S 56 _t
(text)_S 56 _t
(event)_S 1200 7703 _m
(03)_S 2109 7703 _m
(00000011)_S 3422 7703 _m
(nn)_S 56 _t
(tt)_S 56 _t
(..)_S 4836 7703 _m
(Sequence)_S 56 _t
(or)_S 56 _t
(Track)_S 56 _t
(name)_S 4836 7503 _m
(nn)_S 56 _t
(tt=same)_S 56 _t
(as)_S 56 _t
(text)_S 56 _t
(event)_S 1200 7103 _m
(04)_S 2109 7103 _m
(00000100)_S 3422 7103 _m
(nn)_S 56 _t
(tt)_S 56 _t
(..)_S 4836 7103 _m
(Track)_S 56 _t
(instrument)_S 56 _t
(name)_S 4836 6903 _m
(nn)_S 56 _t
(tt=same)_S 56 _t
(as)_S 56 _t
(text)_S 56 _t
(event)_S 1200 6503 _m
(05)_S 2109 6503 _m
(00000101)_S 3422 6503 _m
(nn)_S 56 _t
(tt)_S 56 _t
(..)_S 4836 6503 _m
(Lyric)_S 4836 6303 _m
(nn)_S 56 _t
(tt=same)_S 56 _t
(as)_S 56 _t
(text)_S 56 _t
(event)_S 1200 5903 _m
(06)_S 2109 5903 _m
(00000110)_S 3422 5903 _m
(nn)_S 56 _t
(tt)_S 56 _t
(..)_S 4836 5903 _m
(Marker)_S 4836 5703 _m
(nn)_S 56 _t
(tt=same)_S 56 _t
(as)_S 56 _t
(text)_S 56 _t
(event)_S 1200 5303 _m
(07)_S 2109 5303 _m
(00000111)_S 3422 5303 _m
(nn)_S 56 _t
(tt)_S 56 _t
(..)_S 4836 5303 _m
(Cue)_S 56 _t
(point)_S 4836 5103 _m
(nn)_S 56 _t
(tt=same)_S 56 _t
(as)_S 56 _t
(text)_S 56 _t
(event)_S 1200 4703 _m
(2F)_S 56 _t
2109 4703 _m
(00101111)_S 3422 4703 _m
(00)_S 4836 4703 _m
(This)_S 56 _t
(event)_S 56 _t
(must)_S 56 _t
(come)_S 56 _t
(at)_S 56 _t
(the)_S 56 _t
(end)_S 56 _t
(of)_S 56 _t
(each)_S 56 _t
(track)_S 1200 4303 _m
(51)_S 2109 4303 _m
(01010001)_S 3422 4303 _m
(03)_S 56 _t
(tttttt)_S 4836 4303 _m
(Set)_S 56 _t
(tempo)_S 4836 4103 _m
(tttttt=microseconds/quarter)_S 56 _t
(note)_S 1200 3703 _m
(58)_S 2109 3703 _m
(01011000)_S 3422 3703 _m
(04)_S 56 _t
(nn)_S 56 _t
(dd)_S 56 _t
(cc)_S 56 _t
(bb)_S 4836 3703 _m
(Time)_S 56 _t
(Signature)_S 4836 3503 _m
(nn=numerator)_S 56 _t
(of)_S 56 _t
(time)_S 56 _t
(sig.)_S 4836 3303 _m
(dd=denominator)_S 56 _t
(of)_S 56 _t
(time)_S 56 _t
(sig.)_S 56 _t
(2=quarter)_S 56 _t
(3=eighth,)_S 56 _t
(etc.)_S 4836 3103 _m
(cc=number)_S 56 _t
(of)_S 56 _t
(ticks)_S 56 _t
(in)_S 56 _t
(metronome)_S 56 _t
(click)_S 4836 2903 _m
(bb=number)_S 56 _t
(of)_S 56 _t
(32nd)_S 56 _t
(notes)_S 56 _t
(to)_S 56 _t
(the)_S 56 _t
(quarter)_S 56 _t
(note)_S 1200 2503 _m
(59)_S 2109 2503 _m
(01011001)_S 3422 2503 _m
(02)_S 56 _t
(sf)_S 56 _t
(mi)_S 4836 2503 _m
(Key)_S 56 _t
(signature)_S 4836 2303 _m
(sf=sharps/flats)_S 56 _t
(\(-7=7)_S 56 _t
(flats,)_S 56 _t
(0=key)_S 56 _t
(of)_S 56 _t
(C,)_S 56 _t
(7=7)_S 56 _t
(sharps\))_S 4836 2103 _m
(mi=major/minor)_S 56 _t
(\(0=major,)_S 56 _t
(1=minor\))_S 1200 1703 _m
(7F)_S 2109 1703 _m
(01111111)_S 3422 1703 _m
(xx)_S 56 _t
(dd)_S 56 _t
(..)_S 4836 1703 _m
(Sequencer)_S 56 _t
(specific)_S 56 _t
(information)_S 4836 1503 _m
(xx=number)_S 56 _t
(of)_S 56 _t
(bytes)_S 56 _t
(to)_S 56 _t
(be)_S 56 _t
(sent)_S 4836 1303 _m
(dd=data)_S _ep
_bp /NewCenturySchlbk-RomanR 500 _ff
0 13200 10200 _ornt 
/_r      { sflg {/_t {0 rmoveto}bdef /ron false def}
         { /_S /show load def /_t {0 rmoveto}bdef /ron false def}ifelse
     }bdef
8907 11870 _m
(5)_S 1200 11303 _m
(The)_S 56 _t
(following)_S 56 _t
(table)_S 56 _t
(lists)_S 56 _t
(system)_S 56 _t
(messages)_S 56 _t
(which)_S 56 _t
(control)_S 56 _t
(the)_S 56 _t
(entire)_S 56 _t
(system.)_S 56 _t
(These)_S 56 _t
(have)_S 56 _t
(no)_S 56 _t
(midi)_S 1200 11103 _m
(channel)_S 56 _t
(number.)_S 56 _t
(\(these)_S 56 _t
(will)_S 56 _t
(generally)_S 56 _t
(only)_S 56 _t
(apply)_S 56 _t
(to)_S 56 _t
(controlling)_S 56 _t
(a)_S 56 _t
(midi)_S 56 _t
(keyboard,)_S 56 _t
(etc.\))_S 1200 10703 _m
_U (Hex)_S 2109 10703 _m
(Binary)_S 3422 10703 _m
(Data)_S 4836 10703 _m
(Description)_S _u 1200 10503 _m
(F8)_S 2109 10503 _m
(11111000)_S 4836 10503 _m
(Timing)_S 56 _t
(clock)_S 56 _t
(used)_S 56 _t
(when)_S 56 _t
(synchronization)_S 56 _t
(is)_S 56 _t
(required.)_S 1200 10103 _m
(FA)_S 2109 10103 _m
(11111010)_S 4836 10103 _m
(Start)_S 56 _t
(current)_S 56 _t
(sequence)_S 1200 9703 _m
(FB)_S 2109 9703 _m
(11111011)_S 4836 9703 _m
(Continue)_S 56 _t
(a)_S 56 _t
(stopped)_S 56 _t
(sequence)_S 56 _t
(where)_S 56 _t
(left)_S 56 _t
(off)_S 1200 9303 _m
(FC)_S 2109 9303 _m
(11111100)_S 4836 9303 _m
(Stop)_S 56 _t
(a)_S 56 _t
(sequence)_S 1200 8703 _m
(The)_S 56 _t
(following)_S 56 _t
(table)_S 56 _t
(lists)_S 56 _t
(the)_S 56 _t
(numbers)_S 56 _t
(corresponding)_S 56 _t
(to)_S 56 _t
(notes)_S 56 _t
(for)_S 56 _t
(use)_S 56 _t
(in)_S 56 _t
(note)_S 56 _t
1200 8503 _m
(on)_S 56 _t
(and)_S 56 _t
(note)_S 56 _t
(off)_S 56 _t
(commands.)_S /CourierR 500 _ff
1200 7952 _m
(Octave||)_S 2100 _t
(Note)_S 100 _t
(Numbers)_S 1200 7785 _m
100 _t
100 _t
100 _t
(#)_S 200 _t
(||)_S 1200 7618 _m
100 _t
100 _t
100 _t
100 _t
100 _t
100 _t
(||)_S 100 _t
(C)_S 300 _t
(|)_S 100 _t
(C#)_S 200 _t
(|)_S 100 _t
(D)_S 300 _t
(|)_S 100 _t
(D#)_S 200 _t
(|)_S 100 _t
(E)_S 300 _t
(|)_S 100 _t
(F)_S 300 _t
(|)_S 100 _t
(F#)_S 200 _t
(|)_S 100 _t
(G)_S 300 _t
(|)_S 100 _t
(G#)_S 200 _t
(|)_S 100 _t
(A)_S 300 _t
(|)_S 100 _t
(A#)_S 200 _t
(|)_S 100 _t
(B)_S 1200 7451 _m
(-----------------------------------------------------------------------------)_S 1200 7284 _m
100 _t
100 _t
100 _t
(0)_S 200 _t
(||)_S 300 _t
(0)_S 100 _t
(|)_S 300 _t
(1)_S 100 _t
(|)_S 300 _t
(2)_S 100 _t
(|)_S 300 _t
(3)_S 100 _t
(|)_S 300 _t
(4)_S 100 _t
(|)_S 300 _t
(5)_S 100 _t
(|)_S 300 _t
(6)_S 100 _t
(|)_S 300 _t
(7)_S 100 _t
(|)_S 300 _t
(8)_S 100 _t
(|)_S 300 _t
(9)_S 100 _t
(|)_S 200 _t
(10)_S 100 _t
(|)_S 100 _t
(11)_S 1200 7117 _m
100 _t
100 _t
100 _t
(1)_S 200 _t
(||)_S 200 _t
(12)_S 100 _t
(|)_S 200 _t
(13)_S 100 _t
(|)_S 200 _t
(14)_S 100 _t
(|)_S 200 _t
(15)_S 100 _t
(|)_S 200 _t
(16)_S 100 _t
(|)_S 200 _t
(17)_S 100 _t
(|)_S 200 _t
(18)_S 100 _t
(|)_S 200 _t
(19)_S 100 _t
(|)_S 200 _t
(20)_S 100 _t
(|)_S 200 _t
(21)_S 100 _t
(|)_S 200 _t
(22)_S 100 _t
(|)_S 100 _t
(23)_S 1200 6950 _m
100 _t
100 _t
100 _t
(2)_S 200 _t
(||)_S 200 _t
(24)_S 100 _t
(|)_S 200 _t
(25)_S 100 _t
(|)_S 200 _t
(26)_S 100 _t
(|)_S 200 _t
(27)_S 100 _t
(|)_S 200 _t
(28)_S 100 _t
(|)_S 200 _t
(29)_S 100 _t
(|)_S 200 _t
(30)_S 100 _t
(|)_S 200 _t
(31)_S 100 _t
(|)_S 200 _t
(32)_S 100 _t
(|)_S 200 _t
(33)_S 100 _t
(|)_S 200 _t
(34)_S 100 _t
(|)_S 100 _t
(35)_S 1200 6783 _m
100 _t
100 _t
100 _t
(3)_S 200 _t
(||)_S 200 _t
(36)_S 100 _t
(|)_S 200 _t
(37)_S 100 _t
(|)_S 200 _t
(38)_S 100 _t
(|)_S 200 _t
(39)_S 100 _t
(|)_S 200 _t
(40)_S 100 _t
(|)_S 200 _t
(41)_S 100 _t
(|)_S 200 _t
(42)_S 100 _t
(|)_S 200 _t
(43)_S 100 _t
(|)_S 200 _t
(44)_S 100 _t
(|)_S 200 _t
(45)_S 100 _t
(|)_S 200 _t
(46)_S 100 _t
(|)_S 100 _t
(47)_S 1200 6616 _m
100 _t
100 _t
100 _t
(4)_S 200 _t
(||)_S 200 _t
(48)_S 100 _t
(|)_S 200 _t
(49)_S 100 _t
(|)_S 200 _t
(50)_S 100 _t
(|)_S 200 _t
(51)_S 100 _t
(|)_S 200 _t
(52)_S 100 _t
(|)_S 200 _t
(53)_S 100 _t
(|)_S 200 _t
(54)_S 100 _t
(|)_S 200 _t
(55)_S 100 _t
(|)_S 200 _t
(56)_S 100 _t
(|)_S 200 _t
(57)_S 100 _t
(|)_S 200 _t
(58)_S 100 _t
(|)_S 100 _t
(59)_S 1200 6449 _m
100 _t
100 _t
100 _t
(5)_S 200 _t
(||)_S 200 _t
(60)_S 100 _t
(|)_S 200 _t
(61)_S 100 _t
(|)_S 200 _t
(62)_S 100 _t
(|)_S 200 _t
(63)_S 100 _t
(|)_S 200 _t
(64)_S 100 _t
(|)_S 200 _t
(65)_S 100 _t
(|)_S 200 _t
(66)_S 100 _t
(|)_S 200 _t
(67)_S 100 _t
(|)_S 200 _t
(68)_S 100 _t
(|)_S 200 _t
(69)_S 100 _t
(|)_S 200 _t
(70)_S 100 _t
(|)_S 100 _t
(71)_S 1200 6282 _m
100 _t
100 _t
100 _t
(6)_S 200 _t
(||)_S 200 _t
(72)_S 100 _t
(|)_S 200 _t
(73)_S 100 _t
(|)_S 200 _t
(74)_S 100 _t
(|)_S 200 _t
(75)_S 100 _t
(|)_S 200 _t
(76)_S 100 _t
(|)_S 200 _t
(77)_S 100 _t
(|)_S 200 _t
(78)_S 100 _t
(|)_S 200 _t
(79)_S 100 _t
(|)_S 200 _t
(80)_S 100 _t
(|)_S 200 _t
(81)_S 100 _t
(|)_S 200 _t
(82)_S 100 _t
(|)_S 100 _t
(83)_S 1200 6115 _m
100 _t
100 _t
100 _t
(7)_S 200 _t
(||)_S 200 _t
(84)_S 100 _t
(|)_S 200 _t
(85)_S 100 _t
(|)_S 200 _t
(86)_S 100 _t
(|)_S 200 _t
(87)_S 100 _t
(|)_S 200 _t
(88)_S 100 _t
(|)_S 200 _t
(89)_S 100 _t
(|)_S 200 _t
(90)_S 100 _t
(|)_S 200 _t
(91)_S 100 _t
(|)_S 200 _t
(92)_S 100 _t
(|)_S 200 _t
(93)_S 100 _t
(|)_S 200 _t
(94)_S 100 _t
(|)_S 100 _t
(95)_S 1200 5948 _m
100 _t
100 _t
100 _t
(8)_S 200 _t
(||)_S 200 _t
(96)_S 100 _t
(|)_S 200 _t
(97)_S 100 _t
(|)_S 200 _t
(98)_S 100 _t
(|)_S 200 _t
(99)_S 100 _t
(|)_S 100 _t
(100)_S 100 _t
(|)_S 100 _t
(101)_S 100 _t
(|)_S 100 _t
(102)_S 100 _t
(|)_S 100 _t
(103)_S 100 _t
(|)_S 100 _t
(104)_S 100 _t
(|)_S 100 _t
(105)_S 100 _t
(|)_S 100 _t
(106)_S 100 _t
(|)_S 100 _t
(107)_S 1200 5781 _m
100 _t
100 _t
100 _t
(9)_S 200 _t
(||)_S 100 _t
(108)_S 100 _t
(|)_S 100 _t
(109)_S 100 _t
(|)_S 100 _t
(110)_S 100 _t
(|)_S 100 _t
(111)_S 100 _t
(|)_S 100 _t
(112)_S 100 _t
(|)_S 100 _t
(113)_S 100 _t
(|)_S 100 _t
(114)_S 100 _t
(|)_S 100 _t
(115)_S 100 _t
(|)_S 100 _t
(116)_S 100 _t
(|)_S 100 _t
(117)_S 100 _t
(|)_S 100 _t
(118)_S 100 _t
(|)_S 100 _t
(119)_S 1200 5614 _m
100 _t
100 _t
(10)_S 200 _t
(||)_S 100 _t
(120)_S 100 _t
(|)_S 100 _t
(121)_S 100 _t
(|)_S 100 _t
(122)_S 100 _t
(|)_S 100 _t
(123)_S 100 _t
(|)_S 100 _t
(124)_S 100 _t
(|)_S 100 _t
(125)_S 100 _t
(|)_S 100 _t
(126)_S 100 _t
(|)_S 100 _t
(127)_S 100 _t
(|)_S 1200 5113 _m
100 _t
100 _t
100 _t
100 _t
100 _t
100 _t
100 _t
100 _t
100 _t
100 _t
100 _t
100 _t
100 _t
100 _t
100 _t
100 _t
100 _t
100 _t
100 _t
100 _t
100 _t
100 _t
100 _t
100 _t
100 _t
100 _t
100 _t
100 _t
100 _t
100 _t
100 _t
100 _t
(BIBLIOGRAPHY)_S 1200 4779 _m
100 _t
100 _t
("MIDI)_S 100 _t
(Systems)_S 100 _t
(and)_S 100 _t
(Control")_S 100 _t
(Francis)_S 100 _t
(Rumsey)_S 200 _t
(1990)_S 100 _t
(Focal)_S 100 _t
(Press)_S 1200 4445 _m
100 _t
100 _t
("MIDI)_S 100 _t
(and)_S 100 _t
(Sound)_S 100 _t
(Book)_S 100 _t
(for)_S 100 _t
(the)_S 100 _t
(Atari)_S 100 _t
(ST")_S 100 _t
(Bernd)_S 100 _t
(Enders)_S 100 _t
(and)_S 100 _t
(Wolfgang)_S 100 _t
(Klemme)_S 2109 4278 _m
100 _t
(1989)_S 100 _t
(M&T)_S 100 _t
(Publishing,)_S 100 _t
(Inc.)_S 1200 3944 _m
100 _t
100 _t
(MIDI)_S 100 _t
(file)_S 100 _t
(specs)_S 100 _t
(and)_S 100 _t
(general)_S 100 _t
(MIDI)_S 100 _t
(specs)_S 100 _t
(were)_S 100 _t
(also)_S 100 _t
(obtained)_S 100 _t
(by)_S 100 _t
(sending)_S 100 _t
(e-mail)_S 1200 3777 _m
(to)_S 2109 3777 _m
100 _t
(LISTSERV@AUVM.AMERICAN.EDU)_S 100 _t
(with)_S 100 _t
(the)_S 100 _t
(phrase)_S 100 _t
(GET)_S 100 _t
(MIDISPEC)_S 100 _t
(PACKAGE)_S 100 _t
(in)_S 1200 3610 _m
(the)_S 100 _t
(message.)_S 1200 3276 _m
100 _t
100 _t
_ep
_ed end end
%-12345X

---------------------------- MIDINOTE.PS ----------------------------------

%!PS-Adobe-3.0 EPSF-2.0
%%Creator: Windows PSCRIPT
%%Title: KEYS.CDR from CorelDRAW!
%%BoundingBox: 19 17 594 776
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%Pages: 0
%%BeginResource: procset Win35Dict 3 1
/Win35Dict 60 dict def Win35Dict begin/bd{bind def}bind def/in{72
mul}bd/ed{exch def}bd/ld{load def}bd/tr/translate ld/gs/gsave ld/gr
/grestore ld/fPP false def/SS{fPP{/SV save def}{gs}ifelse}bd/RS{fPP{SV
restore}{gr}ifelse}bd/EJ{gsave showpage grestore}bd/#C{userdict begin
/#copies ed end}bd/FEbuf 2 string def/FEglyph(G  )def/FE{1 exch{dup
16 FEbuf cvrs FEglyph exch 1 exch putinterval 1 index exch FEglyph
cvn put}for}bd/SM{/iRes ed/cyP ed/cxPg ed/cyM ed/cxM ed 0 ne{0 cyP
72 mul 100 div tr -90 rotate}if pop}bd/CB{moveto/dy ed/dx ed dx 0 rlineto
0 dy rlineto dx neg 0 rlineto closepath clip newpath}bd end
%%EndResource
/SVDoc save def
%%EndProlog
%%BeginSetup
Win35Dict begin
%%EndSetup
SS
0 0 26 22 799 1100 300 SM
2397 3162 0 0 CB
%%BeginSetup
/AutoFlatness false def
% Options: Emulsion Up
% Options: Print Positive Output
/SepsColor false def
/ATraps false def
%%EndSetup
%%BeginProlog
%%BeginResource: procset wCorel4Dict
%Copyright (c)1992, 1993 Corel Corporation.  All rights reserved. v4.00.00
/wCorel4Dict 300 dict def wCorel4Dict begin
/bd{bind def}bind def/ld{load def}bd/xd{exch def}bd
/_ null def/rp{{pop}repeat}bd/@cp/closepath ld
/@gs/gsave ld/@gr/grestore ld/@np/newpath ld
/Tl/translate ld/$sv 0 def/@sv{/$sv save def}bd
/@rs{$sv restore}bd/spg/showpage ld/showpage{}bd
currentscreen/@dsp xd/$dsp/@dsp def/$dsa xd
/$dsf xd/$sdf false def/$SDF false def/$Scra 0 def
/SetScr/setscreen ld/setscreen{3 rp}bd/@ss{2 index 0 eq{$dsf 3 1 roll
4 -1 roll pop}if exch $Scra add exch load SetScr}bd
/$c 0 def/$m 0 def/$y 0 def/$k 0 def/$t 1 def
/$n _ def/$o 0 def/$fil 0 def/$C 0 def/$M 0 def
/$Y 0 def/$K 0 def/$T 1 def/$N _ def/$O 0 def
/$PF false def/s1c 0 def/s1m 0 def/s1y 0 def
/s1k 0 def/s1t 0 def/s1n _ def/$bkg false def
/SK 0 def/SM 0 def/SY 0 def/SC 0 def/SepMode 0 def
/CurrentInkName (Composite) def/$ink -1 def
/$op false def matrix currentmatrix/$ctm xd
/$ptm matrix def/$ttm matrix def/$stm matrix def
/$fst 128 def/$pad 0 def/$rox 0 def/$roy 0 def
/CorelDrawReencodeVect [ 16#0/grave 16#5/breve 16#6/dotaccent 16#8/ring 16#A/hungarumlaut 16#B/ogonek 16#C/caron 16#D/dotlessi
16#82/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
16#88/circumflex/perthousand/Scaron/guilsinglleft/OE
16#91/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
16#98/tilde/trademark/scaron/guilsinglright/oe
16#9F/Ydieresis 16#A1/exclamdown/cent/sterling/currency/yen/brokenbar/section
16#a8/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/minus/registered/macron
16#b0/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
16#b8/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
16#c0/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
16#c8/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
16#d0/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
16#d8/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
16#e0/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
16#e8/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
16#f0/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
16#f8/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis
] def AutoFlatness{/@ifl{dup currentflat exch sub 10 gt{
([Error: PathTooComplex; OffendingCommand: AnyPaintingOperator]\n)
print flush newpath exit}{currentflat 2 add setflat}ifelse}bd
/@fill/fill ld/fill{currentflat{{@fill}stopped{@ifl}{exit}ifelse
}bind loop setflat}bd/@eofill/eofill ld/eofill{currentflat{
{@eofill}stopped{@ifl}{exit}ifelse}bind loop
setflat}bd/@clip/clip ld/clip{currentflat{{@clip}stopped{@ifl}{exit}
ifelse}bind loop setflat}bd/@eoclip/eoclip ld
/eoclip{currentflat{{@eoclip}stopped{@ifl}{exit}ifelse}bind loop
setflat}bd/@stroke/stroke ld/stroke{currentflat{{@stroke}stopped{@ifl}
{exit}ifelse}bind loop setflat}bd}if/d/setdash ld
/j/setlinejoin ld/J/setlinecap ld/M/setmiterlimit ld
/w/setlinewidth ld/O{/$o xd}bd/R{/$O xd}bd
/W/eoclip ld/c/curveto ld/C/c ld/l/lineto ld
/L/l ld/rl/rlineto ld/m/moveto ld/n/newpath ld
/N/newpath ld/P{11 rp}bd/u{}bd/U{}bd/A{pop}bd
/q/@gs ld/Q/@gr ld/`{}bd/~{}bd/@{}bd/&{}bd
/@j{@sv @np}bd/@J{@rs}bd/g{1 exch sub/$k xd
/$c 0 def/$m 0 def/$y 0 def/$t 1 def/$n _ def/$fil 0 def}bd
/G{1 sub neg/$K xd _ 1 0 0 0/$C xd/$M xd/$Y xd/$T xd
/$N xd}bd/k{1 index type/stringtype eq{/$t xd
/$n xd}{/$t 0 def/$n _ def}ifelse/$k xd/$y xd
/$m xd/$c xd/$fil 0 def}bd/K{1 index type
/stringtype eq{/$T xd/$N xd}{/$T 0 def/$N _ def}ifelse
/$K xd/$Y xd/$M xd/$C xd}bd/sf{1 index type
/stringtype eq{/s1t xd/s1n xd}{/s1t 0 def
/s1n _ def}ifelse/s1k xd/s1y xd/s1m xd/s1c xd}bd
/i{dup 0 ne{setflat}{pop}ifelse}bd/v{4 -2 roll
2 copy 6 -2 roll c}bd/V/v ld/y{2 copy c}bd
/Y/y ld/@w{matrix rotate/$ptm xd matrix scale
$ptm dup concatmatrix/$ptm xd 1 eq{$ptm exch dup concatmatrix
/$ptm xd}if 1 w}bd/@g{1 eq dup/$sdf xd{/$scp xd
/$sca xd/$scf xd}if}bd/@G{1 eq dup/$SDF xd{/$SCP xd
/$SCA xd/$SCF xd}if}bd/@D{2 index 0 eq{$dsf 3 1 roll
4 -1 roll pop}if 3 copy exch $Scra add exch load
SetScr/$dsp xd/$dsa xd/$dsf xd}bd/$ngx{$SDF{$SCF
SepMode 0 eq{$SCA}{$dsa}ifelse $SCP @ss}if}bd
/p{/$pm xd 7{pop}repeat/$pyf xd/$pxf xd/$pn xd
/$fil 1 def}bd/@MN{2 copy le{pop}{exch pop}ifelse}bd
/@MX{2 copy ge{pop}{exch pop}ifelse}bd/InRange{3 -1 roll
@MN @MX}bd/wDstChck{2 1 roll dup 3 -1 roll
eq{1 add}if}bd/@dot{dup mul exch dup mul add
1 exch sub}bd/@lin{exch pop abs 1 exch sub}bd
/SetRgb/setrgbcolor ld/SetHsb/sethsbcolor ld
/GetRgb/currentrgbcolor ld/GetHsb/currenthsbcolor ld
/SetGry/setgray ld/GetGry/currentgray ld/cmyk2rgb{3{dup 5 -1 roll
add 1 exch sub dup 0 lt{pop 0}if exch}repeat
pop}bd/rgb2cmyk{3{1 exch sub 3 1 roll}repeat
3 copy @MN @MN 3{dup 5 -1 roll sub neg exch}repeat}bd
/rgb2hsb{SetRgb GetHsb}bd/hsb2rgb{3 -1 roll
dup floor sub 3 1 roll SetHsb GetRgb}bd/rgb2g{2 index .299 mul
2 index .587 mul add 1 index .114 mul add 4 1 roll
3 rp}bd/WaldoColor where{pop}{/setcmykcolor where{pop
/SetCmyk/setcmykcolor ld}{/SetCmyk{cmyk2rgb
SetRgb}bd}ifelse/currentcmykcolor where{pop
/GetCmyk/currentcmykcolor ld}{/GetCmyk{GetRgb
rgb2cmyk}bd}ifelse/setoverprint where{pop}{/setoverprint{/$op xd}bd
}ifelse/currentoverprint where{pop}{/currentoverprint{$op}bd}ifelse
/colorimage where{pop/ColorImage/colorimage ld}{/ColorImage{
/ncolors exch def pop/dataaq exch def{dataaq
ncolors dup 3 eq{/$dat exch def 0 1 $dat length
3 div 1 sub{dup 3 mul $dat 1 index get 255 div
$dat 2 index 1 add get 255 div $dat 3 index 2 add get
255 div rgb2g 255 mul cvi exch pop $dat 3 1 roll put}for
$dat 0 $dat length 3 idiv getinterval pop}{4 eq{/$dat exch def
0 1 $dat length 4 div 1 sub{dup 4 mul $dat 1 index get
255 div $dat 2 index 1 add get 255 div $dat 3 index 2 add get
255 div $dat 4 index 3 add get 255 div cmyk2rgb rgb2g 255 mul
cvi exch pop $dat 3 1 roll put}for $dat 0 $dat length
ncolors idiv getinterval}if}ifelse}image}bd}ifelse
/@tc{5 -1 roll dup 1 ge{pop}{4{dup 6 -1 roll
mul exch}repeat pop}ifelse}bd/@scc{1 eq setoverprint
dup _ eq{pop SepMode 0 eq{SetCmyk 0}{0 4 $ink sub index
exch pop 5 1 roll 4 rp SepsColor true eq{$ink 3 gt{1 sub neg dup SetGry
exch}{dup 0 0 0 4 $ink roll SetCmyk}ifelse}{1 sub neg dup SetGry}ifelse
}ifelse exch pop}{SepMode 0 eq{pop @tc SetCmyk 0}{CurrentInkName eq{
4 index}{0}ifelse 6 1 roll 5 rp 1 sub neg dup SetGry}ifelse}ifelse
SepMode 0 eq{pop true}{1 eq currentoverprint and not}ifelse}bd
/setcmykcolor{1 5 1 roll _ currentoverprint @scc
pop}bd/currentcmykcolor{0 0 0 0}bd/setrgbcolor{rgb2cmyk
setcmykcolor}bd/currentrgbcolor{currentcmykcolor
cmyk2rgb}bd/sethsbcolor{hsb2rgb setrgbcolor}bd
/currenthsbcolor{currentrgbcolor rgb2hsb}bd
/setgray{dup dup setrgbcolor}bd/currentgray{currentrgbcolor
rgb2g}bd}ifelse/WaldoColor true def/@sft{$tllx $pxf add dup $tllx gt
{$pwid sub}if/$tx xd $tury $pyf sub dup $tury lt{$phei add}if
/$ty xd}bd/@stb{pathbbox/$ury xd/$urx xd/$lly xd/$llx xd}bd
/@ep{{cvx exec}forall}bd/@tp{@sv/$in true def
2 copy dup $lly le{/$in false def}if $phei sub $ury ge{/$in false def}if
dup $urx ge{/$in false def}if $pwid add $llx le{/$in false def}if
$in{@np 2 copy m $pwid 0 rl 0 $phei neg rl $pwid neg 0 rl
0 $phei rl clip @np $pn cvlit load aload pop
7 -1 roll 5 index sub 7 -1 roll 3 index sub Tl
matrix currentmatrix/$ctm xd @ep 4 rp}{2 rp}ifelse
@rs}bd/@th{@sft 0 1 $tly 1 sub{dup $psx mul $tx add{dup $llx gt
{$pwid sub}{exit}ifelse}loop exch $phei mul
$ty exch sub 0 1 $tlx 1 sub{$pwid mul 3 copy
3 -1 roll add exch @tp pop}for 2 rp}for}bd/@tv{@sft
0 1 $tlx 1 sub{dup $pwid mul $tx add exch $psy mul $ty exch sub{
dup $ury lt{$phei add}{exit}ifelse}loop 0 1 $tly 1 sub{$phei mul
3 copy sub @tp pop}for 2 rp}for}bd/@pf{@gs $ctm setmatrix
$pm concat @stb eoclip Bburx Bbury $pm itransform
/$tury xd/$turx xd Bbllx Bblly $pm itransform
/$tlly xd/$tllx xd/$wid $turx $tllx sub def
/$hei $tury $tlly sub def @gs $vectpat{1 0 0 0 0 _ $o @scc{eofill}if}{
$t $c $m $y $k $n $o @scc{SepMode 0 eq $pfrg or{$tllx $tlly Tl
$wid $hei scale <00> 8 1 false [ 8 0 0 1 0 0 ]{}imagemask}{
/$bkg true def}ifelse}if}ifelse @gr $wid 0 gt $hei 0 gt and{
$pn cvlit load aload pop/$pd xd 3 -1 roll sub/$phei xd
exch sub/$pwid xd $wid $pwid div ceiling 1 add/$tlx xd
$hei $phei div ceiling 1 add/$tly xd $psx 0 eq{@tv}{@th}ifelse}if
@gr @np/$bkg false def}bd/@dlt{$fse $fss sub/nff xd
$frb dup 1 eq exch 2 eq or{$frt dup $frc $frm $fry $frk
@tc 4 copy cmyk2rgb rgb2hsb 3 copy/myb xd/mys xd
/myh xd $tot $toc $tom $toy $tok @tc cmyk2rgb
rgb2hsb 3 1 roll 4 1 roll 5 1 roll sub neg nff div/kdb xd
sub neg nff div/kds xd sub neg dup 0 eq{pop
$frb 2 eq{.99}{-.99}ifelse}if dup $frb 2 eq
exch 0 lt and{1 add}if dup $frb 1 eq exch 0 gt and{1 sub}if
nff div/kdh xd}{$frt dup $frc $frm $fry $frk
@tc 5 copy $tot dup $toc $tom $toy $tok @tc 5 1 roll
6 1 roll 7 1 roll 8 1 roll 9 1 roll sub neg nff div/$dk xd
sub neg nff div/$dy xd sub neg nff div/$dm xd
sub neg nff div/$dc xd sub neg nff div/$dt xd}ifelse}bd
/ffcol{5 copy $fsit 0 eq{setcmykcolor pop}{SepMode 0 ne{
4 index 1 sub neg SetGry 5 rp}{setcmykcolor pop}ifelse}ifelse}bd
/@ftl{1 index 4 index sub dup $pad mul dup/$pdw xd
2 mul sub $fst div/$wid xd 2 index sub/$hei xd
pop Tl @dlt $fss 0 eq{ffcol 0 0 m 0 $hei l $pdw $hei l
$pdw 0 l @cp fill $pdw 0 Tl}if $fss $wid mul 0 Tl
nff{ffcol 0 0 m 0 $hei l $wid $hei l $wid 0 l
@cp fill $wid 0 Tl $frb dup 1 eq exch 2 eq or{4 rp
myh mys myb kdb add 3 1 roll kds add 3 1 roll
kdh add 3 1 roll 3 copy/myb xd/mys xd/myh xd
hsb2rgb rgb2cmyk}{$dk add 5 1 roll $dy add 5 1 roll
$dm add 5 1 roll $dc add 5 1 roll $dt add 5 1 roll}ifelse}repeat
5 rp $tot dup $toc $tom $toy $tok @tc ffcol 0 0 m
0 $hei l $pdw $hei l $pdw 0 l @cp fill 5 rp}bd
/@ftr{1 index 4 index sub dup $rox mul/$row xd
2 div 1 index 4 index sub dup $roy mul/$roh xd
2 div 2 copy dup mul exch dup mul add sqrt $row dup mul
$roh dup mul add sqrt add dup/$hei xd $fst div/$wid xd
4 index add $roh add exch 5 index add $row add
exch Tl 4 rp @dlt $fss 0 eq{ffcol fill 1.0 $pad 2 mul sub
dup scale}if $hei $fss $wid mul sub/$hei xd
nff{ffcol $wid 0 m 0 0 $hei 0 360 arc fill/$hei $hei $wid sub def
$frb dup 1 eq exch 2 eq or{4 rp myh mys myb
kdb add 3 1 roll kds add 3 1 roll kdh add 3 1 roll
3 copy/myb xd/mys xd/myh xd hsb2rgb rgb2cmyk}{$dk add 5 1 roll
$dy add 5 1 roll $dm add 5 1 roll $dc add 5 1 roll
$dt add 5 1 roll}ifelse}repeat 5 rp}bd/@ftc{1 index 4 index sub
dup $rox mul/$row xd 2 div 1 index 4 index sub
dup $roy mul/$roh xd 2 div 2 copy dup mul exch dup mul add sqrt
$row dup mul $roh dup mul add sqrt add dup/$hei xd
$fst div/$wid xd 4 index add $roh add exch 5 index add $row add
exch Tl 4 rp @dlt $fss 0 eq{ffcol fill}{n}ifelse
/$dang 180 $fst 1 sub div def/$sang $dang -2 div 180 add def
/$eang $dang 2 div 180 add def/$sang $sang $dang $fss mul add def
/$eang $eang $dang $fss mul add def/$sang $eang $dang sub def
nff{ffcol $wid 0 m 0 0 $hei $sang $fan add $eang $fan add arc fill
$wid 0 m 0 0 $hei $eang neg $fan add $sang neg $fan add arc fill
/$sang $eang def/$eang $eang $dang add def
$frb dup 1 eq exch 2 eq or{4 rp myh mys myb
kdb add 3 1 roll kds add 3 1 roll kdh add 3 1 roll
3 copy/myb xd/mys xd/myh xd hsb2rgb rgb2cmyk}{$dk add 5 1 roll
$dy add 5 1 roll $dm add 5 1 roll $dc add 5 1 roll
$dt add 5 1 roll}ifelse}repeat 5 rp}bd/@ff{/$fss 0 def
1 1 $fsc 1 sub{dup 1 sub $fsit 0 eq{$fsa exch 5 mul
5 getinterval aload 2 rp/$frk xd/$fry xd/$frm xd/$frc xd
/$frn _ def/$frt 1 def $fsa exch 5 mul 5 getinterval aload pop
$fss add/$fse xd/$tok xd/$toy xd/$tom xd/$toc xd
/$ton _ def/$tot 1 def}{$fsa exch 7 mul 7 getinterval aload 2 rp
/$frt xd/$frn xd/$frk xd/$fry xd/$frm xd/$frc xd
$fsa exch 7 mul 7 getinterval aload pop $fss add/$fse xd
/$tot xd/$ton xd/$tok xd/$toy xd/$tom xd/$toc xd}ifelse
$fsit 0 eq SepMode 0 eq or dup not CurrentInkName $frn eq
and or{@sv eoclip currentflat dup 5 mul setflat
Bbllx Bblly Bburx Bbury $fty 2 eq{@ftc}{$fty 1 eq{1 index 3 index m
2 copy l 3 index 1 index l 3 index 3 index l
@cp @ftr}{1 index 3 index m 2 copy l 3 index 1 index l
3 index 3 index l @cp 4 rp $fan rotate pathbbox
@ftl}ifelse}ifelse setflat @rs/$fss $fse def}if}for
@np}bd/@Pf{@sv SepMode 0 eq $ink 3 eq or{0 J 0 j [] 0 d
$t $c $m $y $k $n $o @scc pop $ctm setmatrix
72 1000 div dup matrix scale dup concat dup Bburx exch Bbury exch
itransform ceiling cvi/Bbury xd ceiling cvi/Bburx xd
Bbllx exch Bblly exch itransform floor cvi/Bblly xd
floor cvi/Bbllx xd $Prm aload pop $Psn load exec}{1 SetGry eofill}ifelse
@rs @np}bd/F{matrix currentmatrix $sdf{$scf $sca $scp @ss}if
$fil 1 eq{@pf}{$fil 2 eq{@ff}{$fil 3 eq{@Pf}{$t $c $m $y $k $n $o
@scc{eofill}{@np}ifelse}ifelse}ifelse}ifelse
$sdf{$dsf $dsa $dsp @ss}if setmatrix}bd/f{@cp F}bd
/S{matrix currentmatrix $ctm setmatrix $SDF{$SCF $SCA $SCP @ss}if
$T $C $M $Y $K $N $O @scc{matrix currentmatrix
$ptm concat stroke setmatrix}{@np}ifelse $SDF{$dsf $dsa $dsp @ss}if
setmatrix}bd/s{@cp S}bd/B{@gs F @gr S}bd/b{@cp B}bd
/E{5 array astore exch cvlit exch def}bd/@cc{
currentfile $dat readhexstring pop}bd/@sm{/$ctm $ctm currentmatrix def
}bd/@E{/Bbury xd/Bburx xd/Bblly xd/Bbllx xd}bd
/@c{@cp}bd/@p{/$fil 1 def 1 eq dup/$vectpat xd{/$pfrg true def}{@gs
$t $c $m $y $k $n $o @scc/$pfrg xd @gr}ifelse
/$pm xd/$psy xd/$psx xd/$pyf xd/$pxf xd/$pn xd}bd
/@P{/$fil 3 def/$Psn xd array astore/$Prm xd}bd
/@k{/$fil 2 def/$roy xd/$rox xd/$pad xd/$fty xd/$fan xd
$fty 1 eq{/$fan 0 def}if/$frb xd/$fst xd/$fsc xd
/$fsa xd/$fsit 0 def}bd/@x{/$fil 2 def/$roy xd/$rox xd/$pad xd
/$fty xd/$fan xd $fty 1 eq{/$fan 0 def}if/$frb xd
/$fst xd/$fsc xd/$fsa xd/$fsit 1 def}bd/@ii{concat
3 index 3 index m 3 index 1 index l 2 copy l
1 index 3 index l 3 index 3 index l clip 4 rp}bd
/tcc{@cc}def/@i{@sm @gs @ii 6 index 1 ne{/$frg true def
2 rp}{1 eq{s1t s1c s1m s1y s1k s1n $o @scc
/$frg xd}{/$frg false def}ifelse 1 eq{@gs $ctm setmatrix
F @gr}if}ifelse @np/$ury xd/$urx xd/$lly xd/$llx xd
/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul 8 div ceiling cvi string def
$bkg $frg or{$SDF{$SCF $SCA $SCP @ss}if $llx $lly Tl
$urx $llx sub $ury $lly sub scale $bkg{$t $c $m $y $k $n $o @scc pop}if
$wid $hei abs $bts 1 eq{$bkg}{$bts}ifelse [ $wid 0 0
$hei neg 0 $hei 0 gt{$hei}{0}ifelse]/tcc load
$bts 1 eq{imagemask}{image}ifelse $SDF{$dsf $dsa $dsp @ss}if}{
$hei abs{tcc pop}repeat}ifelse @gr $ctm setmatrix}bind def
/@M{@sv}bd/@N{/@cc{}def 1 eq{12 -1 roll neg 12 1 roll
@I}{13 -1 roll neg 13 1 roll @i}ifelse @rs}bd
/@I{@sm @gs @ii @np/$ury xd/$urx xd/$lly xd/$llx xd
/$ncl xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul $ncl mul 8 div ceiling cvi string def
$ngx $llx $lly Tl $urx $llx sub $ury $lly sub scale
$wid $hei abs $bts [ $wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]
/@cc load false $ncl ColorImage $SDF{$dsf $dsa $dsp @ss}if
@gr $ctm setmatrix}bd/z{exch findfont exch scalefont setfont}bd
/ZB{9 dict dup begin 4 1 roll/FontType 3 def
/FontMatrix xd/FontBBox xd/Encoding 256 array def
0 1 255{Encoding exch/.notdef put}for/CharStrings 256 dict def
CharStrings/.notdef{}put/Metrics 256 dict def
Metrics/.notdef 3 -1 roll put/BuildChar{exch
dup/$char exch/Encoding get 3 index get def
dup/Metrics get $char get aload pop setcachedevice
begin Encoding exch get CharStrings exch get
end exec}def end definefont pop}bd/ZBAddChar{findfont begin
dup 4 1 roll dup 6 1 roll Encoding 3 1 roll put
CharStrings 3 1 roll put Metrics 3 1 roll put
end}bd/Z{findfont dup maxlength 2 add dict exch
dup{1 index/FID ne{3 index 3 1 roll put}{2 rp}ifelse}forall
pop dup dup/Encoding get 256 array copy dup/$fe xd
/Encoding exch put dup/Fontname 3 index put
3 -1 roll dup length 0 ne{0 exch{dup type 0 type eq{exch pop}{
$fe exch 2 index exch put 1 add}ifelse}forall
pop}if dup 256 dict dup/$met xd/Metrics exch put
dup/FontMatrix get 0 get 1000 mul 1 exch div
3 index length 256 eq{0 1 255{dup $fe exch get
dup/.notdef eq{2 rp}{5 index 3 -1 roll get
2 index mul $met 3 1 roll put}ifelse}for}if
pop definefont pop pop}bd/@ftx{{currentpoint 3 -1 roll
(0) dup 3 -1 roll 0 exch put dup @gs true charpath
$ctm setmatrix @@txt @gr @np stringwidth pop 3 -1 roll add exch moveto
}forall}bd/@ft{matrix currentmatrix exch $sdf{$scf $sca $scp @ss}if
$fil 1 eq{/@@txt/@pf ld @ftx}{$fil 2 eq{/@@txt/@ff ld @ftx}{$fil 3 eq
{/@@txt/@Pf ld @ftx}{$t $c $m $y $k $n $o @scc{show}{pop}ifelse}ifelse
}ifelse}ifelse $sdf{$dsf $dsa $dsp @ss}if setmatrix}bd
/@st{matrix currentmatrix exch $SDF{$SCF $SCA $SCP @ss}if
$T $C $M $Y $K $N $O @scc{{currentpoint 3 -1 roll
(0) dup 3 -1 roll 0 exch put dup @gs true charpath
$ctm setmatrix $ptm concat stroke @gr @np stringwidth pop 3 -1 roll add exch moveto
}forall}{pop}ifelse $SDF{$dsf $dsa $dsp @ss}if
setmatrix}bd/@te{@ft}bd/@tr{@st}bd/@ta{dup
@gs @ft @gr @st}bd/@t@a{dup @gs @st @gr @ft}bd
/@tm{@sm concat}bd/e{/t{@te}def}bd/r{/t{@tr}def}bd
/o{/t{pop}def}bd/a{/t{@ta}def}bd/@a{/t{@t@a}def}bd
/t{@te}def/T{@np $ctm setmatrix/$ttm matrix def}bd
/ddt{t}def/@t{/$stm $stm currentmatrix def
3 1 roll moveto $ttm concat ddt $stm setmatrix}bd
/@n{/$ttm exch matrix rotate def}bd/@s{}bd
/@l{}bd/@B{@gs S @gr F}bd/@b{@cp @B}bd/@sep{
CurrentInkName (Composite) eq{/$ink -1 def}{CurrentInkName (Cyan) eq
{/$ink 0 def}{CurrentInkName (Magenta) eq{/$ink 1 def}{
CurrentInkName (Yellow) eq{/$ink 2 def}{CurrentInkName (Black) eq
{/$ink 3 def}{/$ink 4 def}ifelse}ifelse}ifelse}ifelse}ifelse}bd
/@whi{@gs -72000 dup moveto -72000 72000 lineto
72000 dup lineto 72000 -72000 lineto closepath 1 SetGry fill
@gr}bd/@neg{ [{1 exch sub}/exec cvx currenttransfer/exec cvx] cvx settransfer
@whi}bd/currentscale{1 0 dtransform matrix defaultmatrix idtransform
dup mul exch dup mul add sqrt 0 1 dtransform
matrix defaultmatrix idtransform dup mul exch dup mul add sqrt}bd
/@unscale{currentscale 1 exch div exch 1 exch div exch scale}bd
/@square{dup 0 rlineto dup 0 exch rlineto neg 0 rlineto
closepath}bd/corelsym{gsave newpath Tl -90 rotate
7{45 rotate -.75 2 moveto 1.5 @square fill}repeat
grestore}bd/@reg{gsave newpath Tl -6 -6 moveto 12 @square
gsave 1 GetGry sub SetGry fill grestore 4{90 rotate
0 4 m 0 4 rl}repeat stroke 0 0 corelsym grestore}bd
/$corelmeter [1 .95 .75 .50 .25 .05 0] def
/@colormeter{@gs newpath 0 SetGry 0.3 setlinewidth
/Courier findfont 5 scalefont setfont/y exch def
/x exch def 0 1 6{x 20 sub y m 20 @square @gs $corelmeter exch get dup SetGry fill @gr
stroke x 2 add y 8 add moveto 100 mul 100 exch sub cvi 20 string cvs show
/y y 20 add def}for @gr}bd/@crop{gsave .3 setlinewidth
0 SetGry Tl rotate 0 0 m 0 -24 rl -4 -24 m 8 @square
-4 -20 m 8 0 rl stroke grestore}bd/@colorbox{gsave
newpath Tl 100 exch sub 100 div SetGry -8 -8 moveto 16 @square fill
0 SetGry 10 -2 moveto show grestore}bd/deflevel 0 def
/@sax{/deflevel deflevel 1 add def}bd/@eax{
/deflevel deflevel dup 0 gt{1 sub}if def deflevel 0 gt{/eax load}{eax}
ifelse}bd/eax{{exec}forall}bd/@rax{deflevel 0 eq{@rs @sv}if}bd
/@daq{dup type/arraytype eq{{}forall}if}bd
/@BMP{/@cc xd 12 index 1 eq{12 -1 roll pop
@i}{7 -2 roll 2 rp @I}ifelse}bd end
%%EndResource

%%EndProlog
/#copies 1 def
wCorel4Dict begin
0.00 0.00 Tl
1.0000 1.0000 scale
%%BeginSetup
11.4737 setmiterlimit
0 45 /@dot @D
1.00 setflat
/$fst 128 def
%%EndSetup
[ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 278 
278 355 556 556 889 667 191 333 333 389 584 278 333 278 278 556 
556 556 556 556 556 556 556 556 556 278 278 584 584 584 556 1015 
667 667 722 722 667 611 778 722 278 500 667 556 833 722 778 667 
778 722 667 611 722 667 944 667 667 611 278 278 278 469 556 333 
556 556 500 556 556 278 556 556 222 222 500 222 833 556 556 556 
556 333 500 278 556 500 722 500 500 500 334 260 334 584 750 750 
750 222 556 333 1000 556 556 333 1000 667 333 1000 750 750 750 750 
222 222 333 333 350 556 1000 333 1000 500 333 944 750 750 667 278 
333 556 556 556 556 260 556 333 737 370 556 584 333 737 552 400 
549 333 333 333 576 537 278 333 333 365 556 834 834 834 611 667 
667 667 667 667 667 1000 722 667 667 667 667 278 278 278 278 722 
722 778 778 778 778 778 584 778 722 722 722 722 667 667 611 556 
556 556 556 556 556 889 500 556 556 556 556 278 278 278 278 556 
556 556 556 556 556 556 549 611 556 556 556 556 500 556 500 ]
CorelDrawReencodeVect /_R1-Helvetica /Helvetica Z

%StartPage
@sv
/$ctm matrix currentmatrix def
@sv
%StartColorLayer (COMPOSITE)
%StartTile
/$ctm matrix currentmatrix def
@sv @sv
@rs 0 0 Tl 1.000000 1.000000 scale 
0.000000 0.000000 Tl /$ctm matrix currentmatrix def @sv
@rax %%Note: Object
132.34 700.99 187.20 709.20 @E
0 J 0 j [] 0 d 0 R 0 @G
1.00 1.00 1.00 0.21 K
0 0.22 0.22 0.00 @w
132.34 700.99 m
132.34 709.20 L
187.20 709.20 L
187.20 700.99 L
132.34 700.99 L
@c
S

@rax %%Note: Object
132.41 270.43 168.05 275.90 @E
 0 O 0 @g
1.00 1.00 1.00 0.21 k
0 J 0 j [] 0 d 0 R 0 @G
1.00 1.00 1.00 0.21 K
0 0.22 0.22 0.00 @w
132.41 270.43 m
132.41 275.90 L
168.05 275.90 L
168.05 270.43 L
132.41 270.43 L
@c
B

@rax %%Note: Object
132.41 311.54 168.05 317.02 @E
 0 O 0 @g
1.00 1.00 1.00 0.21 k
0 J 0 j [] 0 d 0 R 0 @G
1.00 1.00 1.00 0.21 K
0 0.22 0.22 0.00 @w
132.41 311.54 m
132.41 317.02 L
168.05 317.02 L
168.05 311.54 L
132.41 311.54 L
@c
B

@rax %%Note: Object
132.41 303.34 168.05 308.81 @E
 0 O 0 @g
1.00 1.00 1.00 0.21 k
0 J 0 j [] 0 d 0 R 0 @G
1.00 1.00 1.00 0.21 K
0 0.22 0.22 0.00 @w
132.41 303.34 m
132.41 308.81 L
168.05 308.81 L
168.05 303.34 L
132.41 303.34 L
@c
B

@rax %%Note: Object
132.41 295.06 168.05 300.60 @E
 0 O 0 @g
1.00 1.00 1.00 0.21 k
0 J 0 j [] 0 d 0 R 0 @G
1.00 1.00 1.00 0.21 K
0 0.22 0.22 0.00 @w
132.41 295.06 m
132.41 300.60 L
168.05 300.60 L
168.05 295.06 L
132.41 295.06 L
@c
B

@rax %%Note: Object
132.41 264.89 187.27 273.17 @E
0 J 0 j [] 0 d 0 R 0 @G
1.00 1.00 1.00 0.21 K
0 0.22 0.22 0.00 @w
132.41 264.89 m
132.41 273.17 L
187.27 273.17 L
187.27 264.89 L
132.41 264.89 L
@c
S

@rax %%Note: Object
132.41 314.28 187.27 322.49 @E
0 J 0 j [] 0 d 0 R 0 @G
1.00 1.00 1.00 0.21 K
0 0.22 0.22 0.00 @w
132.41 314.28 m
132.41 322.49 L
187.27 322.49 L
187.27 314.28 L
132.41 314.28 L
@c
S

@rax %%Note: Object
132.41 306.07 187.27 314.28 @E
0 J 0 j [] 0 d 0 R 0 @G
1.00 1.00 1.00 0.21 K
0 0.22 0.22 0.00 @w
132.41 306.07 m
132.41 314.28 L
187.27 314.28 L
187.27 306.07 L
132.41 306.07 L
@c
S

@rax %%Note: Object
132.41 297.86 187.27 306.07 @E
0 J 0 j [] 0 d 0 R 0 @G
1.00 1.00 1.00 0.21 K
0 0.22 0.22 0.00 @w
132.41 297.86 m
132.41 306.07 L
187.27 306.07 L
187.27 297.86 L
132.41 297.86 L
@c
S

@rax %%Note: Object
132.41 273.17 187.27 281.38 @E
0 J 0 j [] 0 d 0 R 0 @G
1.00 1.00 1.00 0.21 K
0 0.22 0.22 0.00 @w
132.41 273.17 m
132.41 281.38 L
187.27 281.38 L
187.27 273.17 L
132.41 273.17 L
@c
S

@rax %%Note: Object
132.41 289.58 187.27 297.86 @E
0 J 0 j [] 0 d 0 R 0 @G
1.00 1.00 1.00 0.21 K
0 0.22 0.22 0.00 @w
132.41 289.58 m
132.41 297.86 L
187.27 297.86 L
187.27 289.58 L
132.41 289.58 L
@c
S

@rax %%Note: Object
132.41 281.38 187.27 289.58 @E
0 J 0 j [] 0 d 0 R 0 @G
1.00 1.00 1.00 0.21 K
0 0.22 0.22 0.00 @w
132.41 281.38 m
132.41 289.58 L
187.27 289.58 L
187.27 281.38 L
132.41 281.38 L
@c
S

@rax %%Note: Object
132.41 278.64 168.05 284.11 @E
 0 O 0 @g
1.00 1.00 1.00 0.21 k
0 J 0 j [] 0 d 0 R 0 @G
1.00 1.00 1.00 0.21 K
0 0.22 0.22 0.00 @w
132.41 278.64 m
132.41 284.11 L
168.05 284.11 L
168.05 278.64 L
132.41 278.64 L
@c
B

@rax %%Note: Object
132.41 97.70 168.05 103.18 @E
 0 O 0 @g
1.00 1.00 1.00 0.21 k
0 J 0 j [] 0 d 0 R 0 @G
1.00 1.00 1.00 0.21 K
0 0.22 0.22 0.00 @w
132.41 97.70 m
132.41 103.18 L
168.05 103.18 L
168.05 97.70 L
132.41 97.70 L
@c
B

@rax %%Note: Object
132.41 138.82 168.05 144.29 @E
 0 O 0 @g
1.00 1.00 1.00 0.21 k
0 J 0 j [] 0 d 0 R 0 @G
1.00 1.00 1.00 0.21 K
0 0.22 0.22 0.00 @w
132.41 138.82 m
132.41 144.29 L
168.05 144.29 L
168.05 138.82 L
132.41 138.82 L
@c
B

@rax %%Note: Object
132.41 130.61 168.05 136.08 @E
 0 O 0 @g
1.00 1.00 1.00 0.21 k
0 J 0 j [] 0 d 0 R 0 @G
1.00 1.00 1.00 0.21 K
0 0.22 0.22 0.00 @w
132.41 130.61 m
132.41 136.08 L
168.05 136.08 L
168.05 130.61 L
132.41 130.61 L
@c
B

@rax %%Note: Object
132.41 122.33 168.05 127.87 @E
 0 O 0 @g
1.00 1.00 1.00 0.21 k
0 J 0 j [] 0 d 0 R 0 @G
1.00 1.00 1.00 0.21 K
0 0.22 0.22 0.00 @w
132.41 122.33 m
132.41 127.87 L
168.05 127.87 L
168.05 122.33 L
132.41 122.33 L
@c
B

@rax %%Note: Object
132.41 92.16 187.27 100.44 @E
0 J 0 j [] 0 d 0 R 0 @G
1.00 1.00 1.00 0.21 K
0 0.22 0.22 0.00 @w
132.41 92.16 m
132.41 100.44 L
187.27 100.44 L
187.27 92.16 L
132.41 92.16 L
@c
S

@rax %%Note: Object
132.41 141.55 187.27 149.76 @E
0 J 0 j [] 0 d 0 R 0 @G
1.00 1.00 1.00 0.21 K
0 0.22 0.22 0.00 @w
132.41 141.55 m
132.41 149.76 L
187.27 149.76 L
187.27 141.55 L
132.41 141.55 L
@c
S

@rax %%Note: Object
132.41 133.34 187.27 141.55 @E
0 J 0 j [] 0 d 0 R 0 @G
1.00 1.00 1.00 0.21 K
0 0.22 0.22 0.00 @w
132.41 133.34 m
132.41 141.55 L
187.27 141.55 L
187.27 133.34 L
132.41 133.34 L
@c
S

@rax %%Note: Object
132.41 125.14 187.27 133.34 @E
0 J 0 j [] 0 d 0 R 0 @G
1.00 1.00 1.00 0.21 K
0 0.22 0.22 0.00 @w
132.41 125.14 m
132.41 133.34 L
187.27 133.34 L
187.27 125.14 L
132.41 125.14 L
@c
S

@rax %%Note: Object
132.41 100.44 187.27 108.65 @E
0 J 0 j [] 0 d 0 R 0 @G
1.00 1.00 1.00 0.21 K
0 0.22 0.22 0.00 @w
132.41 100.44 m
132.41 108.65 L
187.27 108.65 L
187.27 100.44 L
132.41 100.44 L
@c
S

@rax %%Note: Object
132.41 116.86 187.27 125.14 @E
0 J 0 j [] 0 d 0 R 0 @G
1.00 1.00 1.00 0.21 K
0 0.22 0.22 0.00 @w
132.41 116.86 m
132.41 125.14 L
187.27 125.14 L
187.27 116.86 L
132.41 116.86 L
@c
S

@rax %%Note: Object
132.41 108.65 187.27 116.86 @E
0 J 0 j [] 0 d 0 R 0 @G
1.00 1.00 1.00 0.21 K
0 0.22 0.22 0.00 @w
132.41 108.65 m
132.41 116.86 L
187.27 116.86 L
187.27 108.65 L
132.41 108.65 L
@c
S

@rax %%Note: Object
132.41 105.91 168.05 111.38 @E
 0 O 0 @g
1.00 1.00 1.00 0.21 k
0 J 0 j [] 0 d 0 R 0 @G
1.00 1.00 1.00 0.21 K
0 0.22 0.22 0.00 @w
132.41 105.91 m
132.41 111.38 L
168.05 111.38 L
168.05 105.91 L
132.41 105.91 L
@c
B

@rax %%Note: Object
132.41 155.23 168.05 160.70 @E
 0 O 0 @g
1.00 1.00 1.00 0.21 k
0 J 0 j [] 0 d 0 R 0 @G
1.00 1.00 1.00 0.21 K
0 0.22 0.22 0.00 @w
132.41 155.23 m
132.41 160.70 L
168.05 160.70 L
168.05 155.23 L
132.41 155.23 L
@c
B

@rax %%Note: Object
132.41 196.34 168.05 201.82 @E
 0 O 0 @g
1.00 1.00 1.00 0.21 k
0 J 0 j [] 0 d 0 R 0 @G
1.00 1.00 1.00 0.21 K
0 0.22 0.22 0.00 @w
132.41 196.34 m
132.41 201.82 L
168.05 201.82 L
168.05 196.34 L
132.41 196.34 L
@c
B

@rax %%Note: Object
132.41 188.14 168.05 193.61 @E
 0 O 0 @g
1.00 1.00 1.00 0.21 k
0 J 0 j [] 0 d 0 R 0 @G
1.00 1.00 1.00 0.21 K
0 0.22 0.22 0.00 @w
132.41 188.14 m
132.41 193.61 L
168.05 193.61 L
168.05 188.14 L
132.41 188.14 L
@c
B

@rax %%Note: Object
132.41 179.86 168.05 185.40 @E
 0 O 0 @g
1.00 1.00 1.00 0.21 k
0 J 0 j [] 0 d 0 R 0 @G
1.00 1.00 1.00 0.21 K
0 0.22 0.22 0.00 @w
132.41 179.86 m
132.41 185.40 L
168.05 185.40 L
168.05 179.86 L
132.41 179.86 L
@c
B

@rax %%Note: Object
132.41 149.69 187.27 157.97 @E
0 J 0 j [] 0 d 0 R 0 @G
1.00 1.00 1.00 0.21 K
0 0.22 0.22 0.00 @w
132.41 149.69 m
132.41 157.97 L
187.27 157.97 L
187.27 149.69 L
132.41 149.69 L
@c
S

@rax %%Note: Object
132.41 199.08 187.27 207.29 @E
0 J 0 j [] 0 d 0 R 0 @G
1.00 1.00 1.00 0.21 K
0 0.22 0.22 0.00 @w
132.41 199.08 m
132.41 207.29 L
187.27 207.29 L
187.27 199.08 L
132.41 199.08 L
@c
S

@rax %%Note: Object
132.41 190.87 187.27 199.08 @E
0 J 0 j [] 0 d 0 R 0 @G
1.00 1.00 1.00 0.21 K
0 0.22 0.22 0.00 @w
132.41 190.87 m
132.41 199.08 L
187.27 199.08 L
187.27 190.87 L
132.41 190.87 L
@c
S

@rax %%Note: Object
132.41 182.66 187.27 190.87 @E
0 J 0 j [] 0 d 0 R 0 @G
1.00 1.00 1.00 0.21 K
0 0.22 0.22 0.00 @w
132.41 182.66 m
132.41 190.87 L
187.27 190.87 L
187.27 182.66 L
132.41 182.66 L
@c
S

@rax %%Note: Object
132.41 157.97 187.27 166.18 @E
0 J 0 j [] 0 d 0 R 0 @G
1.00 1.00 1.00 0.21 K
0 0.22 0.22 0.00 @w
132.41 157.97 m
132.41 166.18 L
187.27 166.18 L
187.27 157.97 L
132.41 157.97 L
@c
S

@rax %%Note: Object
132.41 174.38 187.27 182.66 @E
0 J 0 j [] 0 d 0 R 0 @G
1.00 1.00 1.00 0.21 K
0 0.22 0.22 0.00 @w
132.41 174.38 m
132.41 182.66 L
187.27 182.66 L
187.27 174.38 L
132.41 174.38 L
@c
S

@rax %%Note: Object
132.41 166.18 187.27 174.38 @E
0 J 0 j [] 0 d 0 R 0 @G
1.00 1.00 1.00 0.21 K
0 0.22 0.22 0.00 @w
132.41 166.18 m
132.41 174.38 L
187.27 174.38 L
187.27 166.18 L
132.41 166.18 L
@c
S

@rax %%Note: Object
132.41 163.44 168.05 168.91 @E
 0 O 0 @g
1.00 1.00 1.00 0.21 k
0 J 0 j [] 0 d 0 R 0 @G
1.00 1.00 1.00 0.21 K
0 0.22 0.22 0.00 @w
132.41 163.44 m
132.41 168.91 L
168.05 168.91 L
168.05 163.44 L
132.41 163.44 L
@c
B

@rax %%Note: Object
132.34 673.56 167.98 679.03 @E
 0 O 0 @g
1.00 1.00 1.00 0.21 k
0 J 0 j [] 0 d 0 R 0 @G
1.00 1.00 1.00 0.21 K
0 0.22 0.22 0.00 @w
132.34 673.56 m
132.34 679.03 L
167.98 679.03 L
167.98 673.56 L
132.34 673.56 L
@c
B

@rax %%Note: Object
132.34 698.26 167.98 703.73 @E
 0 O 0 @g
1.00 1.00 1.00 0.21 k
0 J 0 j [] 0 d 0 R 0 @G
1.00 1.00 1.00 0.21 K
0 0.22 0.22 0.00 @w
132.34 698.26 m
132.34 703.73 L
167.98 703.73 L
167.98 698.26 L
132.34 698.26 L
@c
B

@rax %%Note: Object
132.34 668.09 187.20 676.30 @E
0 J 0 j [] 0 d 0 R 0 @G
1.00 1.00 1.00 0.21 K
0 0.22 0.22 0.00 @w
132.34 668.09 m
132.34 676.30 L
187.20 676.30 L
187.20 668.09 L
132.34 668.09 L
@c
S

@rax %%Note: Object
132.34 676.30 187.20 684.50 @E
0 J 0 j [] 0 d 0 R 0 @G
1.00 1.00 1.00 0.21 K
0 0.22 0.22 0.00 @w
132.34 676.30 m
132.34 684.50 L
187.20 684.50 L
187.20 676.30 L
132.34 676.30 L
@c
S

@rax %%Note: Object
132.34 692.78 187.20 700.99 @E
0 J 0 j [] 0 d 0 R 0 @G
1.00 1.00 1.00 0.21 K
0 0.22 0.22 0.00 @w
132.34 692.78 m
132.34 700.99 L
187.20 700.99 L
187.20 692.78 L
132.34 692.78 L
@c
S

@rax %%Note: Object
132.34 684.58 187.20 692.78 @E
0 J 0 j [] 0 d 0 R 0 @G
1.00 1.00 1.00 0.21 K
0 0.22 0.22 0.00 @w
132.34 684.58 m
132.34 692.78 L
187.20 692.78 L
187.20 684.58 L
132.34 684.58 L
@c
S

@rax %%Note: Object
132.34 681.77 167.98 687.24 @E
 0 O 0 @g
1.00 1.00 1.00 0.21 k
0 J 0 j [] 0 d 0 R 0 @G
1.00 1.00 1.00 0.21 K
0 0.22 0.22 0.00 @w
132.34 681.77 m
132.34 687.24 L
167.98 687.24 L
167.98 681.77 L
132.34 681.77 L
@c
B

@rax %%Note: Object
132.41 500.90 168.05 506.38 @E
 0 O 0 @g
1.00 1.00 1.00 0.21 k
0 J 0 j [] 0 d 0 R 0 @G
1.00 1.00 1.00 0.21 K
0 0.22 0.22 0.00 @w
132.41 500.90 m
132.41 506.38 L
168.05 506.38 L
168.05 500.90 L
132.41 500.90 L
@c
B

@rax %%Note: Object
132.41 542.02 168.05 547.49 @E
 0 O 0 @g
1.00 1.00 1.00 0.21 k
0 J 0 j [] 0 d 0 R 0 @G
1.00 1.00 1.00 0.21 K
0 0.22 0.22 0.00 @w
132.41 542.02 m
132.41 547.49 L
168.05 547.49 L
168.05 542.02 L
132.41 542.02 L
@c
B

@rax %%Note: Object
132.41 533.81 168.05 539.28 @E
 0 O 0 @g
1.00 1.00 1.00 0.21 k
0 J 0 j [] 0 d 0 R 0 @G
1.00 1.00 1.00 0.21 K
0 0.22 0.22 0.00 @w
132.41 533.81 m
132.41 539.28 L
168.05 539.28 L
168.05 533.81 L
132.41 533.81 L
@c
B

@rax %%Note: Object
132.41 525.53 168.05 531.07 @E
 0 O 0 @g
1.00 1.00 1.00 0.21 k
0 J 0 j [] 0 d 0 R 0 @G
1.00 1.00 1.00 0.21 K
0 0.22 0.22 0.00 @w
132.41 525.53 m
132.41 531.07 L
168.05 531.07 L
168.05 525.53 L
132.41 525.53 L
@c
B

@rax %%Note: Object
132.41 495.36 187.27 503.64 @E
0 J 0 j [] 0 d 0 R 0 @G
1.00 1.00 1.00 0.21 K
0 0.22 0.22 0.00 @w
132.41 495.36 m
132.41 503.64 L
187.27 503.64 L
187.27 495.36 L
132.41 495.36 L
@c
S

@rax %%Note: Object
132.41 544.75 187.27 552.96 @E
0 J 0 j [] 0 d 0 R 0 @G
1.00 1.00 1.00 0.21 K
0 0.22 0.22 0.00 @w
132.41 544.75 m
132.41 552.96 L
187.27 552.96 L
187.27 544.75 L
132.41 544.75 L
@c
S

@rax %%Note: Object
132.41 536.54 187.27 544.75 @E
0 J 0 j [] 0 d 0 R 0 @G
1.00 1.00 1.00 0.21 K
0 0.22 0.22 0.00 @w
132.41 536.54 m
132.41 544.75 L
187.27 544.75 L
187.27 536.54 L
132.41 536.54 L
@c
S

@rax %%Note: Object
132.41 528.34 187.27 536.54 @E
0 J 0 j [] 0 d 0 R 0 @G
1.00 1.00 1.00 0.21 K
0 0.22 0.22 0.00 @w
132.41 528.34 m
132.41 536.54 L
187.27 536.54 L
187.27 528.34 L
132.41 528.34 L
@c
S

@rax %%Note: Object
132.41 503.64 187.27 511.85 @E
0 J 0 j [] 0 d 0 R 0 @G
1.00 1.00 1.00 0.21 K
0 0.22 0.22 0.00 @w
132.41 503.64 m
132.41 511.85 L
187.27 511.85 L
187.27 503.64 L
132.41 503.64 L
@c
S

@rax %%Note: Object
132.41 520.06 187.27 528.34 @E
0 J 0 j [] 0 d 0 R 0 @G
1.00 1.00 1.00 0.21 K
0 0.22 0.22 0.00 @w
132.41 520.06 m
132.41 528.34 L
187.27 528.34 L
187.27 520.06 L
132.41 520.06 L
@c
S

@rax %%Note: Object
132.41 511.85 187.27 520.06 @E
0 J 0 j [] 0 d 0 R 0 @G
1.00 1.00 1.00 0.21 K
0 0.22 0.22 0.00 @w
132.41 511.85 m
132.41 520.06 L
187.27 520.06 L
187.27 511.85 L
132.41 511.85 L
@c
S

@rax %%Note: Object
132.41 509.11 168.05 514.58 @E
 0 O 0 @g
1.00 1.00 1.00 0.21 k
0 J 0 j [] 0 d 0 R 0 @G
1.00 1.00 1.00 0.21 K
0 0.22 0.22 0.00 @w
132.41 509.11 m
132.41 514.58 L
168.05 514.58 L
168.05 509.11 L
132.41 509.11 L
@c
B

@rax %%Note: Object
132.41 558.50 168.05 563.98 @E
 0 O 0 @g
1.00 1.00 1.00 0.21 k
0 J 0 j [] 0 d 0 R 0 @G
1.00 1.00 1.00 0.21 K
0 0.22 0.22 0.00 @w
132.41 558.50 m
132.41 563.98 L
168.05 563.98 L
168.05 558.50 L
132.41 558.50 L
@c
B

@rax %%Note: Object
132.41 599.62 168.05 605.09 @E
 0 O 0 @g
1.00 1.00 1.00 0.21 k
0 J 0 j [] 0 d 0 R 0 @G
1.00 1.00 1.00 0.21 K
0 0.22 0.22 0.00 @w
132.41 599.62 m
132.41 605.09 L
168.05 605.09 L
168.05 599.62 L
132.41 599.62 L
@c
B

@rax %%Note: Object
132.41 591.41 168.05 596.88 @E
 0 O 0 @g
1.00 1.00 1.00 0.21 k
0 J 0 j [] 0 d 0 R 0 @G
1.00 1.00 1.00 0.21 K
0 0.22 0.22 0.00 @w
132.41 591.41 m
132.41 596.88 L
168.05 596.88 L
168.05 591.41 L
132.41 591.41 L
@c
B

@rax %%Note: Object
132.41 583.13 168.05 588.67 @E
 0 O 0 @g
1.00 1.00 1.00 0.21 k
0 J 0 j [] 0 d 0 R 0 @G
1.00 1.00 1.00 0.21 K
0 0.22 0.22 0.00 @w
132.41 583.13 m
132.41 588.67 L
168.05 588.67 L
168.05 583.13 L
132.41 583.13 L
@c
B

@rax %%Note: Object
132.41 552.96 187.27 561.24 @E
0 J 0 j [] 0 d 0 R 0 @G
1.00 1.00 1.00 0.21 K
0 0.22 0.22 0.00 @w
132.41 552.96 m
132.41 561.24 L
187.27 561.24 L
187.27 552.96 L
132.41 552.96 L
@c
S

@rax %%Note: Object
132.41 602.35 187.27 610.56 @E
0 J 0 j [] 0 d 0 R 0 @G
1.00 1.00 1.00 0.21 K
0 0.22 0.22 0.00 @w
132.41 602.35 m
132.41 610.56 L
187.27 610.56 L
187.27 602.35 L
132.41 602.35 L
@c
S

@rax %%Note: Object
132.41 594.14 187.27 602.35 @E
0 J 0 j [] 0 d 0 R 0 @G
1.00 1.00 1.00 0.21 K
0 0.22 0.22 0.00 @w
132.41 594.14 m
132.41 602.35 L
187.27 602.35 L
187.27 594.14 L
132.41 594.14 L
@c
S

@rax %%Note: Object
132.41 585.94 187.27 594.14 @E
0 J 0 j [] 0 d 0 R 0 @G
1.00 1.00 1.00 0.21 K
0 0.22 0.22 0.00 @w
132.41 585.94 m
132.41 594.14 L
187.27 594.14 L
187.27 585.94 L
132.41 585.94 L
@c
S

@rax %%Note: Object
132.41 561.24 187.27 569.45 @E
0 J 0 j [] 0 d 0 R 0 @G
1.00 1.00 1.00 0.21 K
0 0.22 0.22 0.00 @w
132.41 561.24 m
132.41 569.45 L
187.27 569.45 L
187.27 561.24 L
132.41 561.24 L
@c
S

@rax %%Note: Object
132.41 577.66 187.27 585.94 @E
0 J 0 j [] 0 d 0 R 0 @G
1.00 1.00 1.00 0.21 K
0 0.22 0.22 0.00 @w
132.41 577.66 m
132.41 585.94 L
187.27 585.94 L
187.27 577.66 L
132.41 577.66 L
@c
S

@rax %%Note: Object
132.41 569.45 187.27 577.66 @E
0 J 0 j [] 0 d 0 R 0 @G
1.00 1.00 1.00 0.21 K
0 0.22 0.22 0.00 @w
132.41 569.45 m
132.41 577.66 L
187.27 577.66 L
187.27 569.45 L
132.41 569.45 L
@c
S

@rax %%Note: Object
132.41 566.71 168.05 572.18 @E
 0 O 0 @g
1.00 1.00 1.00 0.21 k
0 J 0 j [] 0 d 0 R 0 @G
1.00 1.00 1.00 0.21 K
0 0.22 0.22 0.00 @w
132.41 566.71 m
132.41 572.18 L
168.05 572.18 L
168.05 566.71 L
132.41 566.71 L
@c
B

@rax %%Note: Object
132.41 616.03 168.05 621.50 @E
 0 O 0 @g
1.00 1.00 1.00 0.21 k
0 J 0 j [] 0 d 0 R 0 @G
1.00 1.00 1.00 0.21 K
0 0.22 0.22 0.00 @w
132.41 616.03 m
132.41 621.50 L
168.05 621.50 L
168.05 616.03 L
132.41 616.03 L
@c
B

@rax %%Note: Object
132.41 657.14 168.05 662.62 @E
 0 O 0 @g
1.00 1.00 1.00 0.21 k
0 J 0 j [] 0 d 0 R 0 @G
1.00 1.00 1.00 0.21 K
0 0.22 0.22 0.00 @w
132.41 657.14 m
132.41 662.62 L
168.05 662.62 L
168.05 657.14 L
132.41 657.14 L
@c
B

@rax %%Note: Object
132.41 648.94 168.05 654.41 @E
 0 O 0 @g
1.00 1.00 1.00 0.21 k
0 J 0 j [] 0 d 0 R 0 @G
1.00 1.00 1.00 0.21 K
0 0.22 0.22 0.00 @w
132.41 648.94 m
132.41 654.41 L
168.05 654.41 L
168.05 648.94 L
132.41 648.94 L
@c
B

@rax %%Note: Object
132.41 640.66 168.05 646.20 @E
 0 O 0 @g
1.00 1.00 1.00 0.21 k
0 J 0 j [] 0 d 0 R 0 @G
1.00 1.00 1.00 0.21 K
0 0.22 0.22 0.00 @w
132.41 640.66 m
132.41 646.20 L
168.05 646.20 L
168.05 640.66 L
132.41 640.66 L
@c
B

@rax %%Note: Object
132.41 610.49 187.27 618.77 @E
0 J 0 j [] 0 d 0 R 0 @G
1.00 1.00 1.00 0.21 K
0 0.22 0.22 0.00 @w
132.41 610.49 m
132.41 618.77 L
187.27 618.77 L
187.27 610.49 L
132.41 610.49 L
@c
S

@rax %%Note: Object
132.41 659.88 187.27 668.09 @E
0 J 0 j [] 0 d 0 R 0 @G
1.00 1.00 1.00 0.21 K
0 0.22 0.22 0.00 @w
132.41 659.88 m
132.41 668.09 L
187.27 668.09 L
187.27 659.88 L
132.41 659.88 L
@c
S

@rax %%Note: Object
132.41 651.67 187.27 659.88 @E
0 J 0 j [] 0 d 0 R 0 @G
1.00 1.00 1.00 0.21 K
0 0.22 0.22 0.00 @w
132.41 651.67 m
132.41 659.88 L
187.27 659.88 L
187.27 651.67 L
132.41 651.67 L
@c
S

@rax %%Note: Object
132.41 643.46 187.27 651.67 @E
0 J 0 j [] 0 d 0 R 0 @G
1.00 1.00 1.00 0.21 K
0 0.22 0.22 0.00 @w
132.41 643.46 m
132.41 651.67 L
187.27 651.67 L
187.27 643.46 L
132.41 643.46 L
@c
S

@rax %%Note: Object
132.41 618.77 187.27 626.98 @E
0 J 0 j [] 0 d 0 R 0 @G
1.00 1.00 1.00 0.21 K
0 0.22 0.22 0.00 @w
132.41 618.77 m
132.41 626.98 L
187.27 626.98 L
187.27 618.77 L
132.41 618.77 L
@c
S

@rax %%Note: Object
132.41 635.18 187.27 643.46 @E
0 J 0 j [] 0 d 0 R 0 @G
1.00 1.00 1.00 0.21 K
0 0.22 0.22 0.00 @w
132.41 635.18 m
132.41 643.46 L
187.27 643.46 L
187.27 635.18 L
132.41 635.18 L
@c
S

@rax %%Note: Object
132.41 626.98 187.27 635.18 @E
0 J 0 j [] 0 d 0 R 0 @G
1.00 1.00 1.00 0.21 K
0 0.22 0.22 0.00 @w
132.41 626.98 m
132.41 635.18 L
187.27 635.18 L
187.27 626.98 L
132.41 626.98 L
@c
S

@rax %%Note: Object
132.41 624.24 168.05 629.71 @E
 0 O 0 @g
1.00 1.00 1.00 0.21 k
0 J 0 j [] 0 d 0 R 0 @G
1.00 1.00 1.00 0.21 K
0 0.22 0.22 0.00 @w
132.41 624.24 m
132.41 629.71 L
168.05 629.71 L
168.05 624.24 L
132.41 624.24 L
@c
B

@rax %%Note: Object
132.41 385.63 168.05 391.10 @E
 0 O 0 @g
1.00 1.00 1.00 0.21 k
0 J 0 j [] 0 d 0 R 0 @G
1.00 1.00 1.00 0.21 K
0 0.22 0.22 0.00 @w
132.41 385.63 m
132.41 391.10 L
168.05 391.10 L
168.05 385.63 L
132.41 385.63 L
@c
B

@rax %%Note: Object
132.41 426.74 168.05 432.22 @E
 0 O 0 @g
1.00 1.00 1.00 0.21 k
0 J 0 j [] 0 d 0 R 0 @G
1.00 1.00 1.00 0.21 K
0 0.22 0.22 0.00 @w
132.41 426.74 m
132.41 432.22 L
168.05 432.22 L
168.05 426.74 L
132.41 426.74 L
@c
B

@rax %%Note: Object
132.41 418.54 168.05 424.01 @E
 0 O 0 @g
1.00 1.00 1.00 0.21 k
0 J 0 j [] 0 d 0 R 0 @G
1.00 1.00 1.00 0.21 K
0 0.22 0.22 0.00 @w
132.41 418.54 m
132.41 424.01 L
168.05 424.01 L
168.05 418.54 L
132.41 418.54 L
@c
B

@rax %%Note: Object
132.41 410.26 168.05 415.80 @E
 0 O 0 @g
1.00 1.00 1.00 0.21 k
0 J 0 j [] 0 d 0 R 0 @G
1.00 1.00 1.00 0.21 K
0 0.22 0.22 0.00 @w
132.41 410.26 m
132.41 415.80 L
168.05 415.80 L
168.05 410.26 L
132.41 410.26 L
@c
B

@rax %%Note: Object
132.41 380.09 187.27 388.37 @E
0 J 0 j [] 0 d 0 R 0 @G
1.00 1.00 1.00 0.21 K
0 0.22 0.22 0.00 @w
132.41 380.09 m
132.41 388.37 L
187.27 388.37 L
187.27 380.09 L
132.41 380.09 L
@c
S

@rax %%Note: Object
132.41 429.48 187.27 437.69 @E
0 J 0 j [] 0 d 0 R 0 @G
1.00 1.00 1.00 0.21 K
0 0.22 0.22 0.00 @w
132.41 429.48 m
132.41 437.69 L
187.27 437.69 L
187.27 429.48 L
132.41 429.48 L
@c
S

@rax %%Note: Object
132.41 421.27 187.27 429.48 @E
0 J 0 j [] 0 d 0 R 0 @G
1.00 1.00 1.00 0.21 K
0 0.22 0.22 0.00 @w
132.41 421.27 m
132.41 429.48 L
187.27 429.48 L
187.27 421.27 L
132.41 421.27 L
@c
S

@rax %%Note: Object
132.41 413.06 187.27 421.27 @E
0 J 0 j [] 0 d 0 R 0 @G
1.00 1.00 1.00 0.21 K
0 0.22 0.22 0.00 @w
132.41 413.06 m
132.41 421.27 L
187.27 421.27 L
187.27 413.06 L
132.41 413.06 L
@c
S

@rax %%Note: Object
132.41 388.37 187.27 396.58 @E
0 J 0 j [] 0 d 0 R 0 @G
1.00 1.00 1.00 0.21 K
0 0.22 0.22 0.00 @w
132.41 388.37 m
132.41 396.58 L
187.27 396.58 L
187.27 388.37 L
132.41 388.37 L
@c
S

@rax %%Note: Object
132.41 404.78 187.27 413.06 @E
0 J 0 j [] 0 d 0 R 0 @G
1.00 1.00 1.00 0.21 K
0 0.22 0.22 0.00 @w
132.41 404.78 m
132.41 413.06 L
187.27 413.06 L
187.27 404.78 L
132.41 404.78 L
@c
S

@rax %%Note: Object
132.41 396.58 187.27 404.78 @E
0 J 0 j [] 0 d 0 R 0 @G
1.00 1.00 1.00 0.21 K
0 0.22 0.22 0.00 @w
132.41 396.58 m
132.41 404.78 L
187.27 404.78 L
187.27 396.58 L
132.41 396.58 L
@c
S

@rax %%Note: Object
132.41 393.84 168.05 399.31 @E
 0 O 0 @g
1.00 1.00 1.00 0.21 k
0 J 0 j [] 0 d 0 R 0 @G
1.00 1.00 1.00 0.21 K
0 0.22 0.22 0.00 @w
132.41 393.84 m
132.41 399.31 L
168.05 399.31 L
168.05 393.84 L
132.41 393.84 L
@c
B

@rax %%Note: Object
132.41 212.90 168.05 218.38 @E
 0 O 0 @g
1.00 1.00 1.00 0.21 k
0 J 0 j [] 0 d 0 R 0 @G
1.00 1.00 1.00 0.21 K
0 0.22 0.22 0.00 @w
132.41 212.90 m
132.41 218.38 L
168.05 218.38 L
168.05 212.90 L
132.41 212.90 L
@c
B

@rax %%Note: Object
132.41 254.02 168.05 259.49 @E
 0 O 0 @g
1.00 1.00 1.00 0.21 k
0 J 0 j [] 0 d 0 R 0 @G
1.00 1.00 1.00 0.21 K
0 0.22 0.22 0.00 @w
132.41 254.02 m
132.41 259.49 L
168.05 259.49 L
168.05 254.02 L
132.41 254.02 L
@c
B

@rax %%Note: Object
132.41 245.81 168.05 251.28 @E
 0 O 0 @g
1.00 1.00 1.00 0.21 k
0 J 0 j [] 0 d 0 R 0 @G
1.00 1.00 1.00 0.21 K
0 0.22 0.22 0.00 @w
132.41 245.81 m
132.41 251.28 L
168.05 251.28 L
168.05 245.81 L
132.41 245.81 L
@c
B

@rax %%Note: Object
132.41 237.53 168.05 243.07 @E
 0 O 0 @g
1.00 1.00 1.00 0.21 k
0 J 0 j [] 0 d 0 R 0 @G
1.00 1.00 1.00 0.21 K
0 0.22 0.22 0.00 @w
132.41 237.53 m
132.41 243.07 L
168.05 243.07 L
168.05 237.53 L
132.41 237.53 L
@c
B

@rax %%Note: Object
132.41 207.36 187.27 215.64 @E
0 J 0 j [] 0 d 0 R 0 @G
1.00 1.00 1.00 0.21 K
0 0.22 0.22 0.00 @w
132.41 207.36 m
132.41 215.64 L
187.27 215.64 L
187.27 207.36 L
132.41 207.36 L
@c
S

@rax %%Note: Object
132.41 256.75 187.27 264.96 @E
0 J 0 j [] 0 d 0 R 0 @G
1.00 1.00 1.00 0.21 K
0 0.22 0.22 0.00 @w
132.41 256.75 m
132.41 264.96 L
187.27 264.96 L
187.27 256.75 L
132.41 256.75 L
@c
S

@rax %%Note: Object
132.41 248.54 187.27 256.75 @E
0 J 0 j [] 0 d 0 R 0 @G
1.00 1.00 1.00 0.21 K
0 0.22 0.22 0.00 @w
132.41 248.54 m
132.41 256.75 L
187.27 256.75 L
187.27 248.54 L
132.41 248.54 L
@c
S

@rax %%Note: Object
132.41 240.34 187.27 248.54 @E
0 J 0 j [] 0 d 0 R 0 @G
1.00 1.00 1.00 0.21 K
0 0.22 0.22 0.00 @w
132.41 240.34 m
132.41 248.54 L
187.27 248.54 L
187.27 240.34 L
132.41 240.34 L
@c
S

@rax %%Note: Object
132.41 215.64 187.27 223.85 @E
0 J 0 j [] 0 d 0 R 0 @G
1.00 1.00 1.00 0.21 K
0 0.22 0.22 0.00 @w
132.41 215.64 m
132.41 223.85 L
187.27 223.85 L
187.27 215.64 L
132.41 215.64 L
@c
S

@rax %%Note: Object
132.41 232.06 187.27 240.34 @E
0 J 0 j [] 0 d 0 R 0 @G
1.00 1.00 1.00 0.21 K
0 0.22 0.22 0.00 @w
132.41 232.06 m
132.41 240.34 L
187.27 240.34 L
187.27 232.06 L
132.41 232.06 L
@c
S

@rax %%Note: Object
132.41 223.85 187.27 232.06 @E
0 J 0 j [] 0 d 0 R 0 @G
1.00 1.00 1.00 0.21 K
0 0.22 0.22 0.00 @w
132.41 223.85 m
132.41 232.06 L
187.27 232.06 L
187.27 223.85 L
132.41 223.85 L
@c
S

@rax %%Note: Object
132.41 221.11 168.05 226.58 @E
 0 O 0 @g
1.00 1.00 1.00 0.21 k
0 J 0 j [] 0 d 0 R 0 @G
1.00 1.00 1.00 0.21 K
0 0.22 0.22 0.00 @w
132.41 221.11 m
132.41 226.58 L
168.05 226.58 L
168.05 221.11 L
132.41 221.11 L
@c
B

@rax %%Note: Object
132.41 328.03 168.05 333.50 @E
 0 O 0 @g
1.00 1.00 1.00 0.21 k
0 J 0 j [] 0 d 0 R 0 @G
1.00 1.00 1.00 0.21 K
0 0.22 0.22 0.00 @w
132.41 328.03 m
132.41 333.50 L
168.05 333.50 L
168.05 328.03 L
132.41 328.03 L
@c
B

@rax %%Note: Object
132.41 369.14 168.05 374.62 @E
 0 O 0 @g
1.00 1.00 1.00 0.21 k
0 J 0 j [] 0 d 0 R 0 @G
1.00 1.00 1.00 0.21 K
0 0.22 0.22 0.00 @w
132.41 369.14 m
132.41 374.62 L
168.05 374.62 L
168.05 369.14 L
132.41 369.14 L
@c
B

@rax %%Note: Object
132.41 360.94 168.05 366.41 @E
 0 O 0 @g
1.00 1.00 1.00 0.21 k
0 J 0 j [] 0 d 0 R 0 @G
1.00 1.00 1.00 0.21 K
0 0.22 0.22 0.00 @w
132.41 360.94 m
132.41 366.41 L
168.05 366.41 L
168.05 360.94 L
132.41 360.94 L
@c
B

@rax %%Note: Object
132.41 352.66 168.05 358.20 @E
 0 O 0 @g
1.00 1.00 1.00 0.21 k
0 J 0 j [] 0 d 0 R 0 @G
1.00 1.00 1.00 0.21 K
0 0.22 0.22 0.00 @w
132.41 352.66 m
132.41 358.20 L
168.05 358.20 L
168.05 352.66 L
132.41 352.66 L
@c
B

@rax %%Note: Object
132.41 322.49 187.27 330.77 @E
0 J 0 j [] 0 d 0 R 0 @G
1.00 1.00 1.00 0.21 K
0 0.22 0.22 0.00 @w
132.41 322.49 m
132.41 330.77 L
187.27 330.77 L
187.27 322.49 L
132.41 322.49 L
@c
S

@rax %%Note: Object
132.41 371.88 187.27 380.09 @E
0 J 0 j [] 0 d 0 R 0 @G
1.00 1.00 1.00 0.21 K
0 0.22 0.22 0.00 @w
132.41 371.88 m
132.41 380.09 L
187.27 380.09 L
187.27 371.88 L
132.41 371.88 L
@c
S

@rax %%Note: Object
132.41 363.67 187.27 371.88 @E
0 J 0 j [] 0 d 0 R 0 @G
1.00 1.00 1.00 0.21 K
0 0.22 0.22 0.00 @w
132.41 363.67 m
132.41 371.88 L
187.27 371.88 L
187.27 363.67 L
132.41 363.67 L
@c
S

@rax %%Note: Object
132.41 355.46 187.27 363.67 @E
0 J 0 j [] 0 d 0 R 0 @G
1.00 1.00 1.00 0.21 K
0 0.22 0.22 0.00 @w
132.41 355.46 m
132.41 363.67 L
187.27 363.67 L
187.27 355.46 L
132.41 355.46 L
@c
S

@rax %%Note: Object
132.41 330.77 187.27 338.98 @E
0 J 0 j [] 0 d 0 R 0 @G
1.00 1.00 1.00 0.21 K
0 0.22 0.22 0.00 @w
132.41 330.77 m
132.41 338.98 L
187.27 338.98 L
187.27 330.77 L
132.41 330.77 L
@c
S

@rax %%Note: Object
132.41 347.18 187.27 355.46 @E
0 J 0 j [] 0 d 0 R 0 @G
1.00 1.00 1.00 0.21 K
0 0.22 0.22 0.00 @w
132.41 347.18 m
132.41 355.46 L
187.27 355.46 L
187.27 347.18 L
132.41 347.18 L
@c
S

@rax %%Note: Object
132.41 338.98 187.27 347.18 @E
0 J 0 j [] 0 d 0 R 0 @G
1.00 1.00 1.00 0.21 K
0 0.22 0.22 0.00 @w
132.41 338.98 m
132.41 347.18 L
187.27 347.18 L
187.27 338.98 L
132.41 338.98 L
@c
S

@rax %%Note: Object
132.41 336.24 168.05 341.71 @E
 0 O 0 @g
1.00 1.00 1.00 0.21 k
0 J 0 j [] 0 d 0 R 0 @G
1.00 1.00 1.00 0.21 K
0 0.22 0.22 0.00 @w
132.41 336.24 m
132.41 341.71 L
168.05 341.71 L
168.05 336.24 L
132.41 336.24 L
@c
B

@rax %%Note: Object
132.34 443.23 167.98 448.70 @E
 0 O 0 @g
1.00 1.00 1.00 0.21 k
0 J 0 j [] 0 d 0 R 0 @G
1.00 1.00 1.00 0.21 K
0 0.22 0.22 0.00 @w
132.34 443.23 m
132.34 448.70 L
167.98 448.70 L
167.98 443.23 L
132.34 443.23 L
@c
B

@rax %%Note: Object
132.34 484.34 167.98 489.82 @E
 0 O 0 @g
1.00 1.00 1.00 0.21 k
0 J 0 j [] 0 d 0 R 0 @G
1.00 1.00 1.00 0.21 K
0 0.22 0.22 0.00 @w
132.34 484.34 m
132.34 489.82 L
167.98 489.82 L
167.98 484.34 L
132.34 484.34 L
@c
B

@rax %%Note: Object
132.34 476.14 167.98 481.61 @E
 0 O 0 @g
1.00 1.00 1.00 0.21 k
0 J 0 j [] 0 d 0 R 0 @G
1.00 1.00 1.00 0.21 K
0 0.22 0.22 0.00 @w
132.34 476.14 m
132.34 481.61 L
167.98 481.61 L
167.98 476.14 L
132.34 476.14 L
@c
B

@rax %%Note: Object
132.34 467.86 167.98 473.40 @E
 0 O 0 @g
1.00 1.00 1.00 0.21 k
0 J 0 j [] 0 d 0 R 0 @G
1.00 1.00 1.00 0.21 K
0 0.22 0.22 0.00 @w
132.34 467.86 m
132.34 473.40 L
167.98 473.40 L
167.98 467.86 L
132.34 467.86 L
@c
B

@rax %%Note: Object
132.34 437.69 187.20 445.97 @E
0 J 0 j [] 0 d 0 R 0 @G
1.00 1.00 1.00 0.21 K
0 0.22 0.22 0.00 @w
132.34 437.69 m
132.34 445.97 L
187.20 445.97 L
187.20 437.69 L
132.34 437.69 L
@c
S

@rax %%Note: Object
132.34 487.08 187.20 495.29 @E
0 J 0 j [] 0 d 0 R 0 @G
1.00 1.00 1.00 0.21 K
0 0.22 0.22 0.00 @w
132.34 487.08 m
132.34 495.29 L
187.20 495.29 L
187.20 487.08 L
132.34 487.08 L
@c
S

@rax %%Note: Object
132.34 478.87 187.20 487.08 @E
0 J 0 j [] 0 d 0 R 0 @G
1.00 1.00 1.00 0.21 K
0 0.22 0.22 0.00 @w
132.34 478.87 m
132.34 487.08 L
187.20 487.08 L
187.20 478.87 L
132.34 478.87 L
@c
S

@rax %%Note: Object
132.34 470.66 187.20 478.87 @E
0 J 0 j [] 0 d 0 R 0 @G
1.00 1.00 1.00 0.21 K
0 0.22 0.22 0.00 @w
132.34 470.66 m
132.34 478.87 L
187.20 478.87 L
187.20 470.66 L
132.34 470.66 L
@c
S

@rax %%Note: Object
132.34 445.97 187.20 454.18 @E
0 J 0 j [] 0 d 0 R 0 @G
1.00 1.00 1.00 0.21 K
0 0.22 0.22 0.00 @w
132.34 445.97 m
132.34 454.18 L
187.20 454.18 L
187.20 445.97 L
132.34 445.97 L
@c
S

@rax %%Note: Object
132.34 462.38 187.20 470.66 @E
0 J 0 j [] 0 d 0 R 0 @G
1.00 1.00 1.00 0.21 K
0 0.22 0.22 0.00 @w
132.34 462.38 m
132.34 470.66 L
187.20 470.66 L
187.20 462.38 L
132.34 462.38 L
@c
S

@rax %%Note: Object
132.34 454.18 187.20 462.38 @E
0 J 0 j [] 0 d 0 R 0 @G
1.00 1.00 1.00 0.21 K
0 0.22 0.22 0.00 @w
132.34 454.18 m
132.34 462.38 L
187.20 462.38 L
187.20 454.18 L
132.34 454.18 L
@c
S

@rax %%Note: Object
132.34 451.44 167.98 456.91 @E
 0 O 0 @g
1.00 1.00 1.00 0.21 k
0 J 0 j [] 0 d 0 R 0 @G
1.00 1.00 1.00 0.21 K
0 0.22 0.22 0.00 @w
132.34 451.44 m
132.34 456.91 L
167.98 456.91 L
167.98 451.44 L
132.34 451.44 L
@c
B

@rax 174.17 95.54 177.19 99.94 @E
[0.07199 0.00000 0.00000 0.07199 174.16800 95.61600] @tm
 0 O 0 @g
1.00 1.00 1.00 0.21 k
e
/_R1-Helvetica 83.00 z
0 0 (0) @t
T
@rax 174.17 153.22 180.50 157.54 @E
[0.07199 0.00000 0.00000 0.07199 174.16800 153.21599] @tm
 0 O 0 @g
1.00 1.00 1.00 0.21 k
e
/_R1-Helvetica 83.00 z
0 0 (12) @t
T
@rax 174.17 210.82 180.50 215.14 @E
[0.07199 0.00000 0.00000 0.07199 174.16800 210.81599] @tm
 0 O 0 @g
1.00 1.00 1.00 0.21 k
e
/_R1-Helvetica 83.00 z
0 0 (24) @t
T
@rax 174.17 268.34 180.50 272.74 @E
[0.07199 0.00000 0.00000 0.07199 174.16800 268.41599] @tm
 0 O 0 @g
1.00 1.00 1.00 0.21 k
e
/_R1-Helvetica 83.00 z
0 0 (36) @t
T
@rax 174.17 325.94 180.50 330.34 @E
[0.07199 0.00000 0.00000 0.07199 174.16800 326.01599] @tm
 0 O 0 @g
1.00 1.00 1.00 0.21 k
e
/_R1-Helvetica 83.00 z
0 0 (48) @t
T
@rax 174.17 383.54 180.50 387.94 @E
[0.07199 0.00000 0.00000 0.07199 174.16800 383.61600] @tm
 0 O 0 @g
1.00 1.00 1.00 0.21 k
e
/_R1-Helvetica 83.00 z
0 0 (60) @t
T
@rax 174.17 441.22 180.50 445.54 @E
[0.07199 0.00000 0.00000 0.07199 174.16800 441.21597] @tm
 0 O 0 @g
1.00 1.00 1.00 0.21 k
e
/_R1-Helvetica 83.00 z
0 0 (72) @t
T
@rax 174.17 498.74 180.50 503.14 @E
[0.07199 0.00000 0.00000 0.07199 174.16800 498.81598] @tm
 0 O 0 @g
1.00 1.00 1.00 0.21 k
e
/_R1-Helvetica 83.00 z
0 0 (84) @t
T
@rax 174.17 556.34 180.50 560.74 @E
[0.07199 0.00000 0.00000 0.07199 174.16800 556.41595] @tm
 0 O 0 @g
1.00 1.00 1.00 0.21 k
e
/_R1-Helvetica 83.00 z
0 0 (96) @t
T
@rax 174.17 613.94 183.82 618.34 @E
[0.07199 0.00000 0.00000 0.07199 174.16800 614.01599] @tm
 0 O 0 @g
1.00 1.00 1.00 0.21 k
e
/_R1-Helvetica 83.00 z
0 0 (108) @t
T
@rax 174.17 671.54 183.82 675.94 @E
[0.07199 0.00000 0.00000 0.07199 174.16800 671.61597] @tm
 0 O 0 @g
1.00 1.00 1.00 0.21 k
e
/_R1-Helvetica 83.00 z
0 0 (120) @t
T
@rax 174.17 695.52 183.82 699.91 @E
[0.07199 0.00000 0.00000 0.07199 174.16800 695.59198] @tm
 0 O 0 @g
1.00 1.00 1.00 0.21 k
e
/_R1-Helvetica 83.00 z
0 0 (125) @t
T
@rax 174.17 637.92 183.38 642.31 @E
[0.07199 0.00000 0.00000 0.07199 174.16800 637.99194] @tm
 0 O 0 @g
1.00 1.00 1.00 0.21 k
e
/_R1-Helvetica 83.00 z
0 0 (113) @t
T
@rax 174.17 580.32 182.95 584.71 @E
[0.07199 0.00000 0.00000 0.07199 174.16800 580.39197] @tm
 0 O 0 @g
1.00 1.00 1.00 0.21 k
e
/_R1-Helvetica 83.00 z
0 0 (101) @t
T
@rax 174.17 522.72 180.50 527.11 @E
[0.07199 0.00000 0.00000 0.07199 174.16800 522.79199] @tm
 0 O 0 @g
1.00 1.00 1.00 0.21 k
e
/_R1-Helvetica 83.00 z
0 0 (89) @t
T
@rax 174.17 465.19 180.50 469.44 @E
[0.07199 0.00000 0.00000 0.07199 174.16800 465.19199] @tm
 0 O 0 @g
1.00 1.00 1.00 0.21 k
e
/_R1-Helvetica 83.00 z
0 0 (77) @t
T
@rax 174.17 407.52 180.50 411.91 @E
[0.07199 0.00000 0.00000 0.07199 174.16800 407.59198] @tm
 0 O 0 @g
1.00 1.00 1.00 0.21 k
e
/_R1-Helvetica 83.00 z
0 0 (65) @t
T
@rax 174.17 349.92 180.50 354.31 @E
[0.07199 0.00000 0.00000 0.07199 174.16800 349.99197] @tm
 0 O 0 @g
1.00 1.00 1.00 0.21 k
e
/_R1-Helvetica 83.00 z
0 0 (53) @t
T
@rax 174.17 292.39 179.64 296.71 @E
[0.07199 0.00000 0.00000 0.07199 174.16800 292.39200] @tm
 0 O 0 @g
1.00 1.00 1.00 0.21 k
e
/_R1-Helvetica 83.00 z
0 0 (41) @t
T
@rax 174.17 234.72 180.50 239.11 @E
[0.07199 0.00000 0.00000 0.07199 174.16800 234.79199] @tm
 0 O 0 @g
1.00 1.00 1.00 0.21 k
e
/_R1-Helvetica 83.00 z
0 0 (29) @t
T
@rax 174.17 177.19 180.50 181.51 @E
[0.07199 0.00000 0.00000 0.07199 174.16800 177.19199] @tm
 0 O 0 @g
1.00 1.00 1.00 0.21 k
e
/_R1-Helvetica 83.00 z
0 0 (17) @t
T
@rax 174.17 119.52 177.19 123.84 @E
[0.07199 0.00000 0.00000 0.07199 174.16800 119.59200] @tm
 0 O 0 @g
1.00 1.00 1.00 0.21 k
e
/_R1-Helvetica 83.00 z
0 0 (5) @t
T
@rax 194.40 745.06 392.04 755.21 @E
[0.07199 0.00000 0.00000 0.07199 194.39999 745.19995] @tm
 0 O 0 @g
1.00 1.00 1.00 0.21 k
e
/_R1-Helvetica 194.00 z
0 0 (MIDI File Format Note Numbers) @t
T
@rax %%Note: Object
288.00 691.27 301.03 705.67 @E
 0 O 0 @g
1.00 1.00 1.00 0.21 k
0 J 0 j [] 0 d 0 R 0 @G
1.00 1.00 1.00 0.21 K
0 0.22 0.22 0.00 @w
295.78 691.27 m
291.67 691.27 288.29 696.38 288.14 700.56 C
288.00 704.30 289.66 705.67 293.40 705.67 C
297.43 705.60 301.03 700.34 301.03 696.31 C
301.03 692.78 299.74 691.27 295.78 691.27 C
@c
293.33 696.10 m
294.34 694.58 296.57 692.64 298.01 692.71 C
300.82 693.00 297.36 698.69 296.35 699.98 c
294.55 702.36 292.54 704.30 290.95 704.09 C
288.14 703.37 292.32 697.46 293.33 696.10 c
@c
B

@rax %%Note: Object
302.40 655.27 315.43 669.67 @E
 0 O 0 @g
1.00 1.00 1.00 0.21 k
0 J 0 j [] 0 d 0 R 0 @G
1.00 1.00 1.00 0.21 K
0 0.22 0.22 0.00 @w
310.18 655.27 m
306.07 655.27 302.69 660.38 302.54 664.56 C
302.40 668.30 304.06 669.67 307.80 669.67 C
311.83 669.60 315.43 664.34 315.43 660.31 C
315.43 656.78 314.14 655.27 310.18 655.27 C
@c
307.73 660.10 m
308.74 658.58 310.97 656.64 312.41 656.71 C
315.22 657.00 311.76 662.69 310.75 663.98 c
308.95 666.36 306.94 668.30 305.35 668.09 C
302.54 667.37 306.72 661.46 307.73 660.10 c
@c
B

@rax %%Note: Object
318.24 619.27 331.27 633.67 @E
 0 O 0 @g
1.00 1.00 1.00 0.21 k
0 J 0 j [] 0 d 0 R 0 @G
1.00 1.00 1.00 0.21 K
0 0.22 0.22 0.00 @w
326.02 619.27 m
321.91 619.27 318.53 624.38 318.38 628.56 C
318.24 632.30 319.90 633.67 323.64 633.67 C
327.67 633.60 331.27 628.34 331.27 624.31 C
331.27 620.78 329.98 619.27 326.02 619.27 C
@c
323.57 624.10 m
324.58 622.58 326.81 620.64 328.25 620.71 C
331.06 621.00 327.60 626.69 326.59 627.98 c
324.79 630.36 322.78 632.30 321.19 632.09 C
318.38 631.37 322.56 625.46 323.57 624.10 c
@c
B

@rax %%Note: Object
331.20 590.47 344.23 604.87 @E
 0 O 0 @g
1.00 1.00 1.00 0.21 k
0 J 0 j [] 0 d 0 R 0 @G
1.00 1.00 1.00 0.21 K
0 0.22 0.22 0.00 @w
338.98 590.47 m
334.87 590.47 331.49 595.58 331.34 599.76 C
331.20 603.50 332.86 604.87 336.60 604.87 C
340.63 604.80 344.23 599.54 344.23 595.51 C
344.23 591.98 342.94 590.47 338.98 590.47 C
@c
336.53 595.30 m
337.54 593.78 339.77 591.84 341.21 591.91 C
344.02 592.20 340.56 597.89 339.55 599.18 c
337.75 601.56 335.74 603.50 334.15 603.29 C
331.34 602.57 335.52 596.66 336.53 595.30 c
@c
B

@rax %%Note: Object
347.04 554.47 360.07 568.87 @E
 0 O 0 @g
1.00 1.00 1.00 0.21 k
0 J 0 j [] 0 d 0 R 0 @G
1.00 1.00 1.00 0.21 K
0 0.22 0.22 0.00 @w
354.82 554.47 m
350.71 554.47 347.33 559.58 347.18 563.76 C
347.04 567.50 348.70 568.87 352.44 568.87 C
356.47 568.80 360.07 563.54 360.07 559.51 C
360.07 555.98 358.78 554.47 354.82 554.47 C
@c
352.37 559.30 m
353.38 557.78 355.61 555.84 357.05 555.91 C
359.86 556.20 356.40 561.89 355.39 563.18 c
353.59 565.56 351.58 567.50 349.99 567.29 C
347.18 566.57 351.36 560.66 352.37 559.30 c
@c
B

@rax %%Note: Object
361.44 518.47 374.47 532.87 @E
 0 O 0 @g
1.00 1.00 1.00 0.21 k
0 J 0 j [] 0 d 0 R 0 @G
1.00 1.00 1.00 0.21 K
0 0.22 0.22 0.00 @w
369.22 518.47 m
365.11 518.47 361.73 523.58 361.58 527.76 C
361.44 531.50 363.10 532.87 366.84 532.87 C
370.87 532.80 374.47 527.54 374.47 523.51 C
374.47 519.98 373.18 518.47 369.22 518.47 C
@c
366.77 523.30 m
367.78 521.78 370.01 519.84 371.45 519.91 C
374.26 520.20 370.80 525.89 369.79 527.18 c
367.99 529.56 365.98 531.50 364.39 531.29 C
361.58 530.57 365.76 524.66 366.77 523.30 c
@c
B

@rax %%Note: Object
375.84 482.47 388.87 496.87 @E
 0 O 0 @g
1.00 1.00 1.00 0.21 k
0 J 0 j [] 0 d 0 R 0 @G
1.00 1.00 1.00 0.21 K
0 0.22 0.22 0.00 @w
383.62 482.47 m
379.51 482.47 376.13 487.58 375.98 491.76 C
375.84 495.50 377.50 496.87 381.24 496.87 C
385.27 496.80 388.87 491.54 388.87 487.51 C
388.87 483.98 387.58 482.47 383.62 482.47 C
@c
381.17 487.30 m
382.18 485.78 384.41 483.84 385.85 483.91 C
388.66 484.20 385.20 489.89 384.19 491.18 c
382.39 493.56 380.38 495.50 378.79 495.29 C
375.98 494.57 380.16 488.66 381.17 487.30 c
@c
B

@rax %%Note: Object
388.80 446.47 401.83 460.87 @E
 0 O 0 @g
1.00 1.00 1.00 0.21 k
0 J 0 j [] 0 d 0 R 0 @G
1.00 1.00 1.00 0.21 K
0 0.22 0.22 0.00 @w
396.58 446.47 m
392.47 446.47 389.09 451.58 388.94 455.76 C
388.80 459.50 390.46 460.87 394.20 460.87 C
398.23 460.80 401.83 455.54 401.83 451.51 C
401.83 447.98 400.54 446.47 396.58 446.47 C
@c
394.13 451.30 m
395.14 449.78 397.37 447.84 398.81 447.91 C
401.62 448.20 398.16 453.89 397.15 455.18 c
395.35 457.56 393.34 459.50 391.75 459.29 C
388.94 458.57 393.12 452.66 394.13 451.30 c
@c
B

@rax %%Note: Object
419.04 410.47 432.07 424.87 @E
 0 O 0 @g
1.00 1.00 1.00 0.21 k
0 J 0 j [] 0 d 0 R 0 @G
1.00 1.00 1.00 0.21 K
0 0.22 0.22 0.00 @w
426.82 410.47 m
422.71 410.47 419.33 415.58 419.18 419.76 C
419.04 423.50 420.70 424.87 424.44 424.87 C
428.47 424.80 432.07 419.54 432.07 415.51 C
432.07 411.98 430.78 410.47 426.82 410.47 C
@c
424.37 415.30 m
425.38 413.78 427.61 411.84 429.05 411.91 C
431.86 412.20 428.40 417.89 427.39 419.18 c
425.59 421.56 423.58 423.50 421.99 423.29 C
419.18 422.57 423.36 416.66 424.37 415.30 c
@c
B

@rax %%Note: Object
433.44 374.47 446.47 388.87 @E
 0 O 0 @g
1.00 1.00 1.00 0.21 k
0 J 0 j [] 0 d 0 R 0 @G
1.00 1.00 1.00 0.21 K
0 0.22 0.22 0.00 @w
441.22 374.47 m
437.11 374.47 433.73 379.58 433.58 383.76 C
433.44 387.50 435.10 388.87 438.84 388.87 C
442.87 388.80 446.47 383.54 446.47 379.51 C
446.47 375.98 445.18 374.47 441.22 374.47 C
@c
438.77 379.30 m
439.78 377.78 442.01 375.84 443.45 375.91 C
446.26 376.20 442.80 381.89 441.79 383.18 c
439.99 385.56 437.98 387.50 436.39 387.29 C
433.58 386.57 437.76 380.66 438.77 379.30 c
@c
B

@rax %%Note: Object
447.84 338.47 460.87 352.87 @E
 0 O 0 @g
1.00 1.00 1.00 0.21 k
0 J 0 j [] 0 d 0 R 0 @G
1.00 1.00 1.00 0.21 K
0 0.22 0.22 0.00 @w
455.62 338.47 m
451.51 338.47 448.13 343.58 447.98 347.76 C
447.84 351.50 449.50 352.87 453.24 352.87 C
457.27 352.80 460.87 347.54 460.87 343.51 C
460.87 339.98 459.58 338.47 455.62 338.47 C
@c
453.17 343.30 m
454.18 341.78 456.41 339.84 457.85 339.91 C
460.66 340.20 457.20 345.89 456.19 347.18 c
454.39 349.56 452.38 351.50 450.79 351.29 C
447.98 350.57 452.16 344.66 453.17 343.30 c
@c
B

@rax %%Note: Object
462.24 302.47 475.27 316.87 @E
 0 O 0 @g
1.00 1.00 1.00 0.21 k
0 J 0 j [] 0 d 0 R 0 @G
1.00 1.00 1.00 0.21 K
0 0.22 0.22 0.00 @w
470.02 302.47 m
465.91 302.47 462.53 307.58 462.38 311.76 C
462.24 315.50 463.90 316.87 467.64 316.87 C
471.67 316.80 475.27 311.54 475.27 307.51 C
475.27 303.98 473.98 302.47 470.02 302.47 C
@c
467.57 307.30 m
468.58 305.78 470.81 303.84 472.25 303.91 C
475.06 304.20 471.60 309.89 470.59 311.18 c
468.79 313.56 466.78 315.50 465.19 315.29 C
462.38 314.57 466.56 308.66 467.57 307.30 c
@c
B

@rax %%Note: Object
476.64 266.47 489.67 280.87 @E
 0 O 0 @g
1.00 1.00 1.00 0.21 k
0 J 0 j [] 0 d 0 R 0 @G
1.00 1.00 1.00 0.21 K
0 0.22 0.22 0.00 @w
484.42 266.47 m
480.31 266.47 476.93 271.58 476.78 275.76 C
476.64 279.50 478.30 280.87 482.04 280.87 C
486.07 280.80 489.67 275.54 489.67 271.51 C
489.67 267.98 488.38 266.47 484.42 266.47 C
@c
481.97 271.30 m
482.98 269.78 485.21 267.84 486.65 267.91 C
489.46 268.20 486.00 273.89 484.99 275.18 c
483.19 277.56 481.18 279.50 479.59 279.29 C
476.78 278.57 480.96 272.66 481.97 271.30 c
@c
B

@rax %%Note: Object
489.60 230.47 502.63 244.87 @E
 0 O 0 @g
1.00 1.00 1.00 0.21 k
0 J 0 j [] 0 d 0 R 0 @G
1.00 1.00 1.00 0.21 K
0 0.22 0.22 0.00 @w
497.38 230.47 m
493.27 230.47 489.89 235.58 489.74 239.76 C
489.60 243.50 491.26 244.87 495.00 244.87 C
499.03 244.80 502.63 239.54 502.63 235.51 C
502.63 231.98 501.34 230.47 497.38 230.47 C
@c
494.93 235.30 m
495.94 233.78 498.17 231.84 499.61 231.91 C
502.42 232.20 498.96 237.89 497.95 239.18 c
496.15 241.56 494.14 243.50 492.55 243.29 C
489.74 242.57 493.92 236.66 494.93 235.30 c
@c
B

@rax %%Note: Object
512.64 151.20 525.67 165.60 @E
 0 O 0 @g
1.00 1.00 1.00 0.21 k
0 J 0 j [] 0 d 0 R 0 @G
1.00 1.00 1.00 0.21 K
0 0.22 0.22 0.00 @w
520.42 151.20 m
516.31 151.20 512.93 156.31 512.78 160.49 C
512.64 164.23 514.30 165.60 518.04 165.60 C
522.07 165.53 525.67 160.27 525.67 156.24 C
525.67 152.71 524.38 151.20 520.42 151.20 C
@c
517.97 156.02 m
518.98 154.51 521.21 152.57 522.65 152.64 C
525.46 152.93 522.00 158.62 520.99 159.91 c
519.19 162.29 517.18 164.23 515.59 164.02 C
512.78 163.30 516.96 157.39 517.97 156.02 c
@c
B

@rax %%Note: Object
330.91 72.00 331.20 720.00 @E
0 J 0 j [] 0 d 0 R 0 @G
1.00 1.00 1.00 0.21 K
0 0.22 0.22 0.00 @w
331.06 72.00 m
331.06 720.00 L
S

@rax %%Note: Object
345.31 72.00 345.60 720.00 @E
0 J 0 j [] 0 d 0 R 0 @G
1.00 1.00 1.00 0.21 K
0 0.22 0.22 0.00 @w
345.46 72.00 m
345.46 720.00 L
S

@rax %%Note: Object
359.71 72.00 360.00 720.00 @E
0 J 0 j [] 0 d 0 R 0 @G
1.00 1.00 1.00 0.21 K
0 0.22 0.22 0.00 @w
359.86 720.00 m
359.86 72.00 L
S

@rax %%Note: Object
374.11 72.00 374.40 720.00 @E
0 J 0 j [] 0 d 0 R 0 @G
1.00 1.00 1.00 0.21 K
0 0.22 0.22 0.00 @w
374.26 72.00 m
374.26 720.00 L
S

@rax %%Note: Object
388.51 72.00 388.80 720.00 @E
0 J 0 j [] 0 d 0 R 0 @G
1.00 1.00 1.00 0.21 K
0 0.22 0.22 0.00 @w
388.66 720.00 m
388.66 72.00 L
S

@rax %%Note: Object
431.71 72.00 432.00 720.00 @E
0 J 0 j [] 0 d 0 R 0 @G
1.00 1.00 1.00 0.21 K
0 0.22 0.22 0.00 @w
431.86 72.00 m
431.86 720.00 L
S

@rax %%Note: Object
446.11 72.00 446.40 720.00 @E
0 J 0 j [] 0 d 0 R 0 @G
1.00 1.00 1.00 0.21 K
0 0.22 0.22 0.00 @w
446.26 720.00 m
446.26 72.00 L
S

@rax %%Note: Object
460.51 72.00 460.80 720.00 @E
0 J 0 j [] 0 d 0 R 0 @G
1.00 1.00 1.00 0.21 K
0 0.22 0.22 0.00 @w
460.66 72.00 m
460.66 720.00 L
S

@rax %%Note: Object
474.91 72.00 475.20 720.00 @E
0 J 0 j [] 0 d 0 R 0 @G
1.00 1.00 1.00 0.21 K
0 0.22 0.22 0.00 @w
475.06 720.00 m
475.06 72.00 L
S

@rax %%Note: Object
489.31 72.00 489.60 720.00 @E
0 J 0 j [] 0 d 0 R 0 @G
1.00 1.00 1.00 0.21 K
0 0.22 0.22 0.00 @w
489.46 72.00 m
489.46 720.00 L
S

@rax %%Note: Object
504.00 194.47 517.03 208.87 @E
 0 O 0 @g
1.00 1.00 1.00 0.21 k
0 J 0 j [] 0 d 0 R 0 @G
1.00 1.00 1.00 0.21 K
0 0.22 0.22 0.00 @w
511.78 194.47 m
507.67 194.47 504.29 199.58 504.14 203.76 C
504.00 207.50 505.66 208.87 509.40 208.87 C
513.43 208.80 517.03 203.54 517.03 199.51 C
517.03 195.98 515.74 194.47 511.78 194.47 C
@c
509.33 199.30 m
510.34 197.78 512.57 195.84 514.01 195.91 C
516.82 196.20 513.36 201.89 512.35 203.18 c
510.55 205.56 508.54 207.50 506.95 207.29 C
504.14 206.57 508.32 200.66 509.33 199.30 c
@c
B

@rax %%Note: Object
518.26 144.00 518.54 172.80 @E
0 J 0 j [] 0 d 0 R 0 @G
1.00 1.00 1.00 0.21 K
0 0.22 0.22 0.00 @w
518.40 144.00 m
518.40 172.80 L
S

@rax %%Note: Object
503.86 144.00 504.14 172.80 @E
0 J 0 j [] 0 d 0 R 0 @G
1.00 1.00 1.00 0.21 K
0 0.22 0.22 0.00 @w
504.00 144.00 m
504.00 172.80 L
S

@rax %%Note: Object
302.26 684.00 302.54 712.80 @E
0 J 0 j [] 0 d 0 R 0 @G
1.00 1.00 1.00 0.21 K
0 0.22 0.22 0.00 @w
302.40 684.00 m
302.40 712.80 L
S

@rax %%Note: Object
316.66 648.00 316.94 676.80 @E
0 J 0 j [] 0 d 0 R 0 @G
1.00 1.00 1.00 0.21 K
0 0.22 0.22 0.00 @w
316.80 648.00 m
316.80 676.80 L
S

@rax %%Note: Object
316.66 684.00 316.94 712.80 @E
0 J 0 j [] 0 d 0 R 0 @G
1.00 1.00 1.00 0.21 K
0 0.22 0.22 0.00 @w
316.80 684.00 m
316.80 712.80 L
S

@rax %%Note: Object
331.20 71.93 395.06 101.38 @E
 0 O 0 @g
1.00 1.00 1.00 0.21 k
0 J 0 j [] 0 d 0 R 0 @G
1.00 1.00 1.00 0.21 K
0 0.22 0.22 0.00 @w
366.12 87.55 m
366.62 85.82 368.57 83.88 370.80 83.88 c
371.95 83.88 374.11 84.53 374.98 86.54 c
375.26 87.34 376.13 87.05 375.19 85.39 c
373.54 82.01 369.22 80.42 365.26 83.09 c
364.10 83.66 362.66 85.32 362.09 86.76 C
356.62 85.68 L
358.06 84.02 359.42 82.58 361.51 80.86 c
365.47 77.47 371.66 75.89 375.98 80.14 c
378.86 83.09 379.08 87.12 378.22 90.00 C
366.12 87.55 L
@c
365.98 88.70 m
377.86 91.08 L
376.78 93.82 374.11 94.90 371.59 94.68 c
368.42 94.32 365.98 92.09 365.98 88.70 C
@c
349.92 85.54 m
348.55 87.77 342.36 91.80 338.69 90.94 c
336.46 90.65 336.46 88.20 338.69 86.83 c
341.57 85.10 346.54 84.10 349.92 85.54 C
@c
350.86 84.53 m
342.58 82.22 334.80 83.88 332.28 87.19 c
331.20 88.63 331.34 88.92 332.42 89.78 c
339.34 94.68 349.99 92.95 355.68 86.69 C
361.80 87.91 L
360.07 97.34 375.19 101.38 378.94 91.37 C
384.48 92.23 389.66 94.97 392.83 90.65 c
395.06 87.55 394.42 83.52 392.40 81.43 c
391.03 79.99 388.51 79.13 386.06 80.86 c
382.75 83.45 385.49 87.70 389.16 86.98 c
391.25 86.54 391.75 84.53 391.61 83.45 C
394.42 85.39 392.62 90.43 389.81 91.30 c
386.64 92.45 383.26 91.01 379.44 90.14 C
381.89 79.92 370.73 71.93 361.08 76.32 c
357.55 77.98 354.02 81.29 350.86 84.53 C
@c
B

@rax %%Note: Object
439.13 72.00 482.40 100.80 @E
 0 O 0 @g
1.00 1.00 1.00 0.21 k
0 J 0 j [] 0 d 0 R 0 @G
1.00 1.00 1.00 0.21 K
0 0.22 0.22 0.00 @w
481.25 72.00 m
478.51 75.24 476.28 77.98 473.62 80.42 c
471.02 82.58 468.29 84.53 465.12 85.82 c
461.81 87.34 457.13 88.70 452.81 88.78 c
449.64 88.78 446.98 88.49 444.96 87.41 c
443.09 86.33 441.58 84.67 441.58 82.44 c
441.58 79.99 442.66 76.75 446.33 75.60 c
447.62 75.24 448.13 76.10 448.13 76.61 c
448.27 77.04 447.70 77.83 447.70 78.70 c
447.70 79.70 448.27 80.57 448.92 81.29 c
449.71 81.86 450.94 82.30 451.94 82.30 c
454.54 82.30 456.77 80.42 456.77 77.98 c
456.77 76.61 456.19 75.53 455.26 74.66 c
454.32 73.73 452.74 73.01 450.79 73.01 c
447.84 73.01 444.74 74.45 442.87 76.39 c
441.86 77.40 441.29 78.70 440.71 79.85 c
439.13 84.24 440.06 87.84 443.38 90.86 c
445.61 93.02 448.78 94.54 453.46 94.54 c
457.92 94.54 463.32 92.81 468.50 89.21 c
470.74 87.62 472.82 85.46 474.84 82.87 c
477.50 79.78 479.88 76.10 482.40 72.14 C
481.25 72.00 L
@c
446.90 96.26 m
446.04 96.26 445.25 96.48 444.74 96.98 c
444.31 97.34 444.02 97.85 444.02 98.57 c
444.02 99.14 444.31 99.72 444.89 100.01 c
445.25 100.44 446.04 100.80 446.98 100.80 c
447.91 100.80 448.56 100.44 449.14 99.94 c
449.64 99.65 449.86 99.07 449.86 98.42 c
449.86 97.92 449.50 97.34 449.14 96.98 c
448.56 96.55 447.84 96.26 446.90 96.26 c
@c
458.57 96.26 m
457.56 96.26 456.98 96.55 456.41 96.98 c
455.90 97.34 455.69 97.85 455.69 98.57 c
455.69 99.14 455.98 99.79 456.55 100.15 c
457.06 100.44 457.70 100.80 458.57 100.80 c
459.50 100.80 460.37 100.44 460.80 99.94 c
461.30 99.65 461.52 99.07 461.52 98.57 c
461.52 97.92 461.30 97.34 460.80 96.98 c
460.22 96.55 459.50 96.26 458.57 96.26 c
@c
B

@rax 513.36 129.60 522.07 142.42 @E
[0.00001 0.07199 -0.07199 0.00001 522.00000 129.59999] @tm
 0 O 0 @g
1.00 1.00 1.00 0.21 k
e
/_R1-Helvetica 167.00 z
0 0 (36) @t
T
@rax 506.16 180.00 514.87 192.82 @E
[0.00001 0.07199 -0.07199 0.00001 514.79999 179.99998] @tm
 0 O 0 @g
1.00 1.00 1.00 0.21 k
e
/_R1-Helvetica 167.00 z
0 0 (38) @t
T
@rax 491.76 216.00 500.40 227.09 @E
[0.00001 0.07199 -0.07199 0.00001 500.39996 215.99998] @tm
 0 O 0 @g
1.00 1.00 1.00 0.21 k
e
/_R1-Helvetica 167.00 z
0 0 (41) @t
T
@rax 477.43 252.00 486.07 264.82 @E
[0.00001 0.07199 -0.07199 0.00001 485.99997 251.99998] @tm
 0 O 0 @g
1.00 1.00 1.00 0.21 k
e
/_R1-Helvetica 167.00 z
0 0 (45) @t
T
@rax 462.96 288.00 471.67 300.82 @E
[0.00001 0.07199 -0.07199 0.00001 471.59998 288.00000] @tm
 0 O 0 @g
1.00 1.00 1.00 0.21 k
e
/_R1-Helvetica 167.00 z
0 0 (48) @t
T
@rax 448.56 324.00 457.27 336.74 @E
[0.00001 0.07199 -0.07199 0.00001 457.19998 324.00000] @tm
 0 O 0 @g
1.00 1.00 1.00 0.21 k
e
/_R1-Helvetica 167.00 z
0 0 (52) @t
T
@rax 434.23 360.00 442.87 372.82 @E
[0.00001 0.07199 -0.07199 0.00001 442.79999 359.99997] @tm
 0 O 0 @g
1.00 1.00 1.00 0.21 k
e
/_R1-Helvetica 167.00 z
0 0 (55) @t
T
@rax 419.76 396.00 428.47 408.82 @E
[0.00001 0.07199 -0.07199 0.00001 428.39999 395.99997] @tm
 0 O 0 @g
1.00 1.00 1.00 0.21 k
e
/_R1-Helvetica 167.00 z
0 0 (59) @t
T
@rax 390.96 432.00 399.67 444.74 @E
[0.00001 0.07199 -0.07199 0.00001 399.59998 431.99997] @tm
 0 O 0 @g
1.00 1.00 1.00 0.21 k
e
/_R1-Helvetica 167.00 z
0 0 (62) @t
T
@rax 376.56 468.00 385.27 480.82 @E
[0.00001 0.07199 -0.07199 0.00001 385.19998 467.99997] @tm
 0 O 0 @g
1.00 1.00 1.00 0.21 k
e
/_R1-Helvetica 167.00 z
0 0 (65) @t
T
@rax 362.16 504.00 370.87 516.82 @E
[0.00001 0.07199 -0.07199 0.00001 370.79999 503.99997] @tm
 0 O 0 @g
1.00 1.00 1.00 0.21 k
e
/_R1-Helvetica 167.00 z
0 0 (69) @t
T
@rax 347.76 540.00 356.40 552.74 @E
[0.00001 0.07199 -0.07199 0.00001 356.39999 540.00000] @tm
 0 O 0 @g
1.00 1.00 1.00 0.21 k
e
/_R1-Helvetica 167.00 z
0 0 (72) @t
T
@rax 333.36 576.00 342.07 588.82 @E
[0.00001 0.07199 -0.07199 0.00001 342.00000 576.00000] @tm
 0 O 0 @g
1.00 1.00 1.00 0.21 k
e
/_R1-Helvetica 167.00 z
0 0 (76) @t
T
@rax 318.96 604.80 327.67 617.62 @E
[0.00001 0.07199 -0.07199 0.00001 327.59998 604.79999] @tm
 0 O 0 @g
1.00 1.00 1.00 0.21 k
e
/_R1-Helvetica 167.00 z
0 0 (79) @t
T
@rax 304.56 640.80 313.27 653.62 @E
[0.00001 0.07199 -0.07199 0.00001 313.19998 640.79999] @tm
 0 O 0 @g
1.00 1.00 1.00 0.21 k
e
/_R1-Helvetica 167.00 z
0 0 (83) @t
T
@rax 290.16 676.80 298.87 689.62 @E
[0.00001 0.07199 -0.07199 0.00001 298.79999 676.79999] @tm
 0 O 0 @g
1.00 1.00 1.00 0.21 k
e
/_R1-Helvetica 167.00 z
0 0 (86) @t
T
@rax 187.20 381.53 226.15 388.87 @E
[0.07199 0.00000 0.00000 0.07199 187.20000 381.59998] @tm
 0 O 0 @g
1.00 1.00 1.00 0.21 k
e
/_R1-Helvetica 139.00 z
0 0 (Middle C) @t
T
@rs @rs
/$ctm matrix currentmatrix def
%EndTile
%EndColorLayer
@rs
@rs
%EndPage
%%Trailer
end
%%DocumentProcessColors: Cyan Magenta Yellow Black 
%%DocumentFonts: Helvetica 
%%DocumentSuppliedResources: procset wCorel4Dict
EJ RS
%%PageTrailer
2397 3162 0 0 CB
%%Trailer
SVDoc restore
end
%%DocumentSuppliedResources: procset Win35Dict 3 1

%%DocumentNeededResources: 
%%EOF

